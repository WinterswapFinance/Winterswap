{
  "contractName": "Snowball",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dev",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "contract IWNS",
          "name": "_wns",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dev\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IWNS\",\"name\":\"_wns\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IHRC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IHRC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IHRC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {HRC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IHRC20-balanceOf} and {IHRC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IHRC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IHRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IHRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {HRC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (Farm).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol\":\"Snowball\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c\",\"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20.sol\":{\"keccak256\":\"0xd8bb97ac00ddd2cac35306608645be6ae76b35066cf2e63a9f13b80b6a31e895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f02a04c39e42dee0345c5de6071e481fc4f32f615249de085fae6b93a93e636\",\"dweb:/ipfs/QmcuRmz1jeqCPv7qUgKyskcPh5eyntbuqdgvWKRVYeUyBE\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20Capped.sol\":{\"keccak256\":\"0xa11e891a01077a2cda347243991ad7fc6f742d49ec105080b2984cd7a399b320\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63326a5baa7672a83a9dc3f2b2868d1d8950a1f2517d5e5bc38d6da78acc0fc6\",\"dweb:/ipfs/QmNnGd2KWdXbXFJncQTZ1e7wdPuhdx7dRAScRVmzJiniLt\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/IHRC20.sol\":{\"keccak256\":\"0x97e18cee8ca5b9f8e070167fd89ebe8f32265d00ee255f352d3706f4484aa93c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8e3489c9fcb251f5ba971143089e605549a2db852a5a50cf3313f0804a0a4f0\",\"dweb:/ipfs/Qmf5jb4uFjWqP1TuxzQSMU7TR9R8LXf3Na5CcPdvFZeoJp\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol\":{\"keccak256\":\"0x50ff14cb45bac8f17d20e7ba536d9c8a0d199ba58aed0dd194d887084891231e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1481999cb5be4f885756f561911707962dd0d615ba212eaaa0f384aafa86feb5\",\"dweb:/ipfs/QmewnHAvZa9PNATKKWjLEbWTdkxZZmLhhJ9yfDNMjqaz3s\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/wns/IWNS.sol\":{\"keccak256\":\"0x975cf34ae00bb2205d3417d92393526e8822df47d558e047c7264cfb65c57425\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12f225f56e5cae010e1ca5008b36c7149d57ebb6e58c494c7324b3b64426a64c\",\"dweb:/ipfs/QmeTNqtydDtAnYqBhpw9P5jxzN8hBnid61ErYKo4nfVsz6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011ea380380620011ea833981810160405260608110156200003757600080fd5b50805160208083015160409384015184518086018652600881526714db9bddd8985b1b60c21b818501908152865180880190975260038088526229a72160e91b9588019590955281519596939592946a084595161401484a000000949293620000a192906200038d565b508051620000b79060049060208401906200038d565b50506005805460ff1916601217905550806200011a576040805162461bcd60e51b815260206004820152601560248201527f48524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b6006556001600160a01b038316158015906200013557508115155b15620001475762000147838362000170565b600980546001600160a01b0319166001600160a01b039290921691909117905550620004399050565b6001600160a01b038216620001cc576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001da600083836200027f565b620001f6816002546200032560201b620007841790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002299183906200078462000325821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b620002978383836200032060201b620007e51760201c565b6001600160a01b0383166200032057600654620002cc82620002b862000387565b6200032560201b620007841790919060201c565b111562000320576040805162461bcd60e51b815260206004820152601960248201527f48524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b505050565b60008282018381101562000380576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60025490565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003c5576000855562000410565b82601f10620003e057805160ff191683800117855562000410565b8280016001018555821562000410579182015b8281111562000410578251825591602001919060010190620003f3565b506200041e92915062000422565b5090565b5b808211156200041e576000815560010162000423565b610da180620004496000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c578063a457c2d711610066578063a457c2d7146102aa578063a9059cbb146102d6578063dd62ed3e14610302578063e1c7392a14610330576100ea565b806340c10f191461024e57806370a082311461027c57806395d89b41146102a2576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc578063355274ea1461021a5780633950935114610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610338565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b0381351690602001356103ce565b604080519115158252519081900360200190f35b6101b46103eb565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b038135811691602081013590911690604001356103f1565b610204610478565b6040805160ff9092168252519081900360200190f35b6101b4610481565b6101986004803603604081101561023857600080fd5b506001600160a01b038135169060200135610487565b61027a6004803603604081101561026457600080fd5b506001600160a01b0381351690602001356104d5565b005b6101b46004803603602081101561029257600080fd5b50356001600160a01b0316610541565b6100f761055c565b610198600480360360408110156102c057600080fd5b506001600160a01b0381351690602001356105bd565b610198600480360360408110156102ec57600080fd5b506001600160a01b038135169060200135610625565b6101b46004803603604081101561031857600080fd5b506001600160a01b0381358116916020013516610639565b61027a610664565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c45780601f10610399576101008083540402835291602001916103c4565b820191906000526020600020905b8154815290600101906020018083116103a757829003601f168201915b5050505050905090565b60006103e26103db6107ea565b84846107ee565b50600192915050565b60025490565b60006103fe8484846108da565b61046e8461040a6107ea565b61046985604051806060016040528060288152602001610cd0602891396001600160a01b038a166000908152600160205260408120906104486107ea565b6001600160a01b031681526020810191909152604001600020549190610a35565b6107ee565b5060019392505050565b60055460ff1690565b60065490565b60006103e26104946107ea565b8461046985600160006104a56107ea565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610784565b6007546001600160a01b03163314806104f857506008546001600160a01b031633145b6105335760405162461bcd60e51b815260040180806020018281038252602d815260200180610d1b602d913960400191505060405180910390fd5b61053d8282610acc565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c45780601f10610399576101008083540402835291602001916103c4565b60006103e26105ca6107ea565b8461046985604051806060016040528060258152602001610cab60259139600160006105f46107ea565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610a35565b60006103e26106326107ea565b84846108da565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600960009054906101000a90046001600160a01b03166001600160a01b03166336e9332d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b257600080fd5b505afa1580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b5051600780546001600160a01b0319166001600160a01b0392831617905560095460408051635d09d2b960e11b81529051919092169163ba13a572916004808301926020929190829003018186803b15801561073757600080fd5b505afa15801561074b573d6000803e3d6000fd5b505050506040513d602081101561076157600080fd5b5051600880546001600160a01b0319166001600160a01b03909216919091179055565b6000828201838110156107de576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b505050565b3390565b6001600160a01b0383166108335760405162461bcd60e51b8152600401808060200182810382526024815260200180610d486024913960400191505060405180910390fd5b6001600160a01b0382166108785760405162461bcd60e51b8152600401808060200182810382526022815260200180610c3e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661091f5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c606025913960400191505060405180910390fd5b6001600160a01b0382166109645760405162461bcd60e51b8152600401808060200182810382526023815260200180610cf86023913960400191505060405180910390fd5b61096f838383610bbc565b6109ac81604051806060016040528060268152602001610c85602691396001600160a01b0386166000908152602081905260409020549190610a35565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109db9082610784565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ac45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a89578181015183820152602001610a71565b50505050905090810190601f168015610ab65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610b27576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610b3360008383610bbc565b600254610b409082610784565b6002556001600160a01b038216600090815260208190526040902054610b669082610784565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610bc78383836107e5565b6001600160a01b0383166107e557600654610bea82610be46103eb565b90610784565b11156107e5576040805162461bcd60e51b815260206004820152601960248201527f48524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fdfe48524332303a20617070726f766520746f20746865207a65726f206164647265737348524332303a207472616e736665722066726f6d20746865207a65726f206164647265737348524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636548524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f48524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636548524332303a207472616e7366657220746f20746865207a65726f20616464726573735065726d69747465643a2063616c6c6572206973206e656974686572206661726d206e6f72206c6f747465727948524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220158835d6c2590eaea94b2824421d80acf806ad1e022e5c0a4e7a68b0597ac51164736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c578063a457c2d711610066578063a457c2d7146102aa578063a9059cbb146102d6578063dd62ed3e14610302578063e1c7392a14610330576100ea565b806340c10f191461024e57806370a082311461027c57806395d89b41146102a2576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc578063355274ea1461021a5780633950935114610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610338565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b0381351690602001356103ce565b604080519115158252519081900360200190f35b6101b46103eb565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b038135811691602081013590911690604001356103f1565b610204610478565b6040805160ff9092168252519081900360200190f35b6101b4610481565b6101986004803603604081101561023857600080fd5b506001600160a01b038135169060200135610487565b61027a6004803603604081101561026457600080fd5b506001600160a01b0381351690602001356104d5565b005b6101b46004803603602081101561029257600080fd5b50356001600160a01b0316610541565b6100f761055c565b610198600480360360408110156102c057600080fd5b506001600160a01b0381351690602001356105bd565b610198600480360360408110156102ec57600080fd5b506001600160a01b038135169060200135610625565b6101b46004803603604081101561031857600080fd5b506001600160a01b0381358116916020013516610639565b61027a610664565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c45780601f10610399576101008083540402835291602001916103c4565b820191906000526020600020905b8154815290600101906020018083116103a757829003601f168201915b5050505050905090565b60006103e26103db6107ea565b84846107ee565b50600192915050565b60025490565b60006103fe8484846108da565b61046e8461040a6107ea565b61046985604051806060016040528060288152602001610cd0602891396001600160a01b038a166000908152600160205260408120906104486107ea565b6001600160a01b031681526020810191909152604001600020549190610a35565b6107ee565b5060019392505050565b60055460ff1690565b60065490565b60006103e26104946107ea565b8461046985600160006104a56107ea565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610784565b6007546001600160a01b03163314806104f857506008546001600160a01b031633145b6105335760405162461bcd60e51b815260040180806020018281038252602d815260200180610d1b602d913960400191505060405180910390fd5b61053d8282610acc565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c45780601f10610399576101008083540402835291602001916103c4565b60006103e26105ca6107ea565b8461046985604051806060016040528060258152602001610cab60259139600160006105f46107ea565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610a35565b60006103e26106326107ea565b84846108da565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600960009054906101000a90046001600160a01b03166001600160a01b03166336e9332d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b257600080fd5b505afa1580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b5051600780546001600160a01b0319166001600160a01b0392831617905560095460408051635d09d2b960e11b81529051919092169163ba13a572916004808301926020929190829003018186803b15801561073757600080fd5b505afa15801561074b573d6000803e3d6000fd5b505050506040513d602081101561076157600080fd5b5051600880546001600160a01b0319166001600160a01b03909216919091179055565b6000828201838110156107de576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b505050565b3390565b6001600160a01b0383166108335760405162461bcd60e51b8152600401808060200182810382526024815260200180610d486024913960400191505060405180910390fd5b6001600160a01b0382166108785760405162461bcd60e51b8152600401808060200182810382526022815260200180610c3e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661091f5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c606025913960400191505060405180910390fd5b6001600160a01b0382166109645760405162461bcd60e51b8152600401808060200182810382526023815260200180610cf86023913960400191505060405180910390fd5b61096f838383610bbc565b6109ac81604051806060016040528060268152602001610c85602691396001600160a01b0386166000908152602081905260409020549190610a35565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109db9082610784565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ac45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a89578181015183820152602001610a71565b50505050905090810190601f168015610ab65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610b27576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610b3360008383610bbc565b600254610b409082610784565b6002556001600160a01b038216600090815260208190526040902054610b669082610784565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610bc78383836107e5565b6001600160a01b0383166107e557600654610bea82610be46103eb565b90610784565b11156107e5576040805162461bcd60e51b815260206004820152601960248201527f48524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fdfe48524332303a20617070726f766520746f20746865207a65726f206164647265737348524332303a207472616e736665722066726f6d20746865207a65726f206164647265737348524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636548524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f48524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636548524332303a207472616e7366657220746f20746865207a65726f20616464726573735065726d69747465643a2063616c6c6572206973206e656974686572206661726d206e6f72206c6f747465727948524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220158835d6c2590eaea94b2824421d80acf806ad1e022e5c0a4e7a68b0597ac51164736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "139:810:46:-:0;;;442:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:210:46;;;;;;;;;;;;1948:138:28;;;;;;;;;;-1:-1:-1;;;1948:138:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1948:138:28;;;;;;;2015:13;;442:210:46;;;;;;206:15;;1948:138:28;;2015:13;;1948:138;2015:13;:::i;:::-;-1:-1:-1;2038:17:28;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2065:9:28;:14;;-1:-1:-1;;2065:14:28;2077:2;2065:14;;;-1:-1:-1;443:8:30;435:42;;;;;-1:-1:-1;;;435:42:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:4;:11;-1:-1:-1;;;;;551:17:46;::::2;::::0;;::::2;::::0;:31:::2;;-1:-1:-1::0;572:10:46;;::::2;551:31;548:78;;;597:18;603:3:::0;608:6;597:5:::2;:18::i;:::-;635:3;:10:::0;;-1:-1:-1;;;;;;635:10:46::2;-1:-1:-1::0;;;;;635:10:46;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;139:810:46;;-1:-1:-1;139:810:46;7775:370:28;-1:-1:-1;;;;;7858:21:28;;7850:65;;;;;-1:-1:-1;;;7850:65:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:49;7955:1;7959:7;7968:6;7926:20;:49::i;:::-;8001:24;8018:6;8001:12;;:16;;;;;;:24;;;;:::i;:::-;7986:12;:39;-1:-1:-1;;;;;8056:18:28;;:9;:18;;;;;;;;;;;;:30;;8079:6;;8056:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8035:18:28;;:9;:18;;;;;;;;;;;:51;;;;8101:37;;;;;;;8035:18;;:9;;8101:37;;;;;;;;;;7775:370;;:::o;835:312:30:-;943:44;970:4;976:2;980:6;943:26;;;;;:44;;:::i;:::-;-1:-1:-1;;;;;1002:18:30;;998:143;;1096:4;;1067:25;1085:6;1067:13;:11;:13::i;:::-;:17;;;;;;:25;;;;:::i;:::-;:33;;1059:71;;;;;-1:-1:-1;;;1059:71:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:312;;;:::o;874:176:21:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:21:o;3194:98:28:-;3273:12;;3194:98;:::o;139:810:46:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;139:810:46;;;-1:-1:-1;139:810:46;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "139:810:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4187:166:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3194:98;;;:::i;:::-;;;;;;;;;;;;;;;;4820:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4820:317:28;;;;;;;;;;;;;;;;;:::i;3053:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;584:73:30;;;:::i;5532:215:28:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5532:215:28;;;;;;;;:::i;846:101:46:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;846:101:46;;;;;;;;:::i;:::-;;3350:117:28;;;;;;;;;;;;;;;;-1:-1:-1;3350:117:28;-1:-1:-1;;;;;3350:117:28;;:::i;2345:85::-;;;:::i;6234:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6234:266:28;;;;;;;;:::i;3670:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3670:172:28;;;;;;;;:::i;3900:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3900:149:28;;;;;;;;;;:::i;658:91:46:-;;;:::i;2151:81:28:-;2220:5;2213:12;;;;;;;;-1:-1:-1;;2213:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:13;;2213:12;;2220:5;;2213:12;;2220:5;2213:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:81;:::o;4187:166::-;4270:4;4286:39;4295:12;:10;:12::i;:::-;4309:7;4318:6;4286:8;:39::i;:::-;-1:-1:-1;4342:4:28;4187:166;;;;:::o;3194:98::-;3273:12;;3194:98;:::o;4820:317::-;4926:4;4942:36;4952:6;4960:9;4971:6;4942:9;:36::i;:::-;4988:121;4997:6;5005:12;:10;:12::i;:::-;5019:89;5057:6;5019:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5019:19:28;;;;;;:11;:19;;;;;;5039:12;:10;:12::i;:::-;-1:-1:-1;;;;;5019:33:28;;;;;;;;;;;;-1:-1:-1;5019:33:28;;;:89;:37;:89::i;:::-;4988:8;:121::i;:::-;-1:-1:-1;5126:4:28;4820:317;;;;;:::o;3053:81::-;3118:9;;;;3053:81;:::o;584:73:30:-;646:4;;584:73;:::o;5532:215:28:-;5620:4;5636:83;5645:12;:10;:12::i;:::-;5659:7;5668:50;5707:10;5668:11;:25;5680:12;:10;:12::i;:::-;-1:-1:-1;;;;;5668:25:28;;;;;;;;;;;;;;;;;-1:-1:-1;5668:25:28;;;:34;;;;;;;;;;;:38;:50::i;846:101:46:-;339:4;;-1:-1:-1;;;;;339:4:46;325:10;:18;;:43;;-1:-1:-1;361:7:46;;-1:-1:-1;;;;;361:7:46;347:10;:21;325:43;317:101;;;;-1:-1:-1;;;317:101:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:19:::1;927:3;932:7;921:5;:19::i;:::-;846:101:::0;;:::o;3350:117:28:-;-1:-1:-1;;;;;3442:18:28;3416:7;3442:18;;;;;;;;;;;;3350:117::o;2345:85::-;2416:7;2409:14;;;;;;;;-1:-1:-1;;2409:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:13;;2409:14;;2416:7;;2409:14;;2416:7;2409:14;;;;;;;;;;;;;;;;;;;;;;;;6234:266;6327:4;6343:129;6352:12;:10;:12::i;:::-;6366:7;6375:96;6414:15;6375:96;;;;;;;;;;;;;;;;;:11;:25;6387:12;:10;:12::i;:::-;-1:-1:-1;;;;;6375:25:28;;;;;;;;;;;;;;;;;-1:-1:-1;6375:25:28;;;:34;;;;;;;;;;;:96;:38;:96::i;3670:172::-;3756:4;3772:42;3782:12;:10;:12::i;:::-;3796:9;3807:6;3772:9;:42::i;3900:149::-;-1:-1:-1;;;;;4015:18:28;;;3989:7;4015:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3900:149::o;658:91:46:-;699:3;;;;;;;;;-1:-1:-1;;;;;699:3:46;-1:-1:-1;;;;;699:8:46;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;699:10:46;692:4;:17;;-1:-1:-1;;;;;;692:17:46;-1:-1:-1;;;;;692:17:46;;;;;;729:3;;:13;;;-1:-1:-1;;;729:13:46;;;;:3;;;;;:11;;:13;;;;;699:10;;729:13;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;729:13:46;719:7;:23;;-1:-1:-1;;;;;;719:23:46;-1:-1:-1;;;;;719:23:46;;;;;;;;;658:91::o;874:176:21:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:21:o;10636:92:28:-;;;;:::o;590:104:3:-;677:10;590:104;:::o;9298:340:28:-;-1:-1:-1;;;;;9399:19:28;;9391:68;;;;-1:-1:-1;;;9391:68:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9477:21:28;;9469:68;;;;-1:-1:-1;;;9469:68:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9548:18:28;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9599:32;;;;;;;;;;;;;;;;;9298:340;;;:::o;6974:530::-;-1:-1:-1;;;;;7079:20:28;;7071:70;;;;-1:-1:-1;;;7071:70:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7159:23:28;;7151:71;;;;-1:-1:-1;;;7151:71:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7233:47;7254:6;7262:9;7273:6;7233:20;:47::i;:::-;7311:71;7333:6;7311:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7311:17:28;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7291:17:28;;;:9;:17;;;;;;;;;;;:91;;;;7415:20;;;;;;;:32;;7440:6;7415:24;:32::i;:::-;-1:-1:-1;;;;;7392:20:28;;;:9;:20;;;;;;;;;;;;:55;;;;7462:35;;;;;;;7392:20;;7462:35;;;;;;;;;;;;;6974:530;;;:::o;1746:187:21:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:21;;;1746:187::o;7775:370:28:-;-1:-1:-1;;;;;7858:21:28;;7850:65;;;;;-1:-1:-1;;;7850:65:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:49;7955:1;7959:7;7968:6;7926:20;:49::i;:::-;8001:12;;:24;;8018:6;8001:16;:24::i;:::-;7986:12;:39;-1:-1:-1;;;;;8056:18:28;;:9;:18;;;;;;;;;;;:30;;8079:6;8056:22;:30::i;:::-;-1:-1:-1;;;;;8035:18:28;;:9;:18;;;;;;;;;;;:51;;;;8101:37;;;;;;;8035:18;;:9;;8101:37;;;;;;;;;;7775:370;;:::o;835:312:30:-;943:44;970:4;976:2;980:6;943:26;:44::i;:::-;-1:-1:-1;;;;;1002:18:30;;998:143;;1096:4;;1067:25;1085:6;1067:13;:11;:13::i;:::-;:17;;:25::i;:::-;:33;;1059:71;;;;;-1:-1:-1;;;1059:71:30;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/token/HRC20/HRC20Capped.sol\";\nimport \"../wns/IWNS.sol\";\n\ncontract Snowball is HRC20Capped {\n\n    uint256 constant __cap__ = 10000000*10**18;\n\n    address farm;\n    address lottery;\n    IWNS wns;\n\n    modifier onlyPermitted() {\n        require(msg.sender == farm || msg.sender == lottery, \"Permitted: caller is neither farm nor lottery\");\n        _;\n    }\n\n    constructor(address dev, uint256 amount, IWNS _wns) HRC20Capped(__cap__) HRC20(\"Snowball\",\"SNB\"){\n        if(dev != address(0) && amount !=0){\n            _mint(dev, amount);\n        }\n        wns = _wns;\n    }\n\n    function init() external{\n        farm = wns.farm();\n        lottery = wns.lottery();\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (Farm).\n    function mint(address _to, uint256 _amount) public onlyPermitted {\n        _mint(_to, _amount);\n    }\n}\n",
  "sourcePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol",
  "ast": {
    "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol",
    "exportedSymbols": {
      "Context": [
        1285
      ],
      "HRC20": [
        5694
      ],
      "HRC20Capped": [
        5831
      ],
      "IHRC20": [
        6264
      ],
      "IWNS": [
        14911
      ],
      "SafeMath": [
        4438
      ],
      "Snowball": [
        8644
      ]
    },
    "id": 8645,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8539,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:46"
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20Capped.sol",
        "file": "../openzeppelin/token/HRC20/HRC20Capped.sol",
        "id": 8540,
        "nodeType": "ImportDirective",
        "scope": 8645,
        "sourceUnit": 5832,
        "src": "58:53:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/wns/IWNS.sol",
        "file": "../wns/IWNS.sol",
        "id": 8541,
        "nodeType": "ImportDirective",
        "scope": 8645,
        "sourceUnit": 14912,
        "src": "112:25:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8542,
              "name": "HRC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5831,
              "src": "160:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HRC20Capped_$5831",
                "typeString": "contract HRC20Capped"
              }
            },
            "id": 8543,
            "nodeType": "InheritanceSpecifier",
            "src": "160:11:46"
          }
        ],
        "contractDependencies": [
          1285,
          5694,
          5831,
          6264
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8644,
        "linearizedBaseContracts": [
          8644,
          5831,
          5694,
          6264,
          1285
        ],
        "name": "Snowball",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8550,
            "mutability": "constant",
            "name": "__cap__",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "179:42:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8544,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "179:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              },
              "id": 8549,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130303030303030",
                "id": 8545,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "206:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000_by_1",
                  "typeString": "int_const 10000000"
                },
                "value": "10000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 8548,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 8546,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "215:2:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 8547,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "219:2:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "215:6:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "206:15:46",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8552,
            "mutability": "mutable",
            "name": "farm",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "228:12:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8551,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "228:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8554,
            "mutability": "mutable",
            "name": "lottery",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "246:15:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8553,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "246:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8556,
            "mutability": "mutable",
            "name": "wns",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "267:8:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWNS_$14911",
              "typeString": "contract IWNS"
            },
            "typeName": {
              "id": 8555,
              "name": "IWNS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14911,
              "src": "267:4:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWNS_$14911",
                "typeString": "contract IWNS"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8572,
              "nodeType": "Block",
              "src": "307:129:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "325:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "325:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8561,
                            "name": "farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8552,
                            "src": "339:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "325:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8563,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "347:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "347:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8565,
                            "name": "lottery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8554,
                            "src": "361:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "347:21:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "325:43:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d69747465643a2063616c6c6572206973206e656974686572206661726d206e6f72206c6f7474657279",
                        "id": 8568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "370:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3e563ee2564cf478ab6062f0ca13c4728bd87c5467afb4946fd424ed510749f",
                          "typeString": "literal_string \"Permitted: caller is neither farm nor lottery\""
                        },
                        "value": "Permitted: caller is neither farm nor lottery"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3e563ee2564cf478ab6062f0ca13c4728bd87c5467afb4946fd424ed510749f",
                          "typeString": "literal_string \"Permitted: caller is neither farm nor lottery\""
                        }
                      ],
                      "id": 8558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "317:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "317:101:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8570,
                  "nodeType": "ExpressionStatement",
                  "src": "317:101:46"
                },
                {
                  "id": 8571,
                  "nodeType": "PlaceholderStatement",
                  "src": "428:1:46"
                }
              ]
            },
            "id": 8573,
            "name": "onlyPermitted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:46"
            },
            "src": "282:154:46",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8610,
              "nodeType": "Block",
              "src": "538:114:46",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 8594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8589,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8575,
                        "src": "551:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "566:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "558:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "558:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "558:10:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "551:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8595,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8577,
                        "src": "572:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "572:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "551:31:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8605,
                  "nodeType": "IfStatement",
                  "src": "548:78:46",
                  "trueBody": {
                    "id": 8604,
                    "nodeType": "Block",
                    "src": "583:43:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8600,
                              "name": "dev",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8575,
                              "src": "603:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8601,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8577,
                              "src": "608:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8599,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5570,
                            "src": "597:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 8602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "597:18:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8603,
                        "nodeType": "ExpressionStatement",
                        "src": "597:18:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8606,
                      "name": "wns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8556,
                      "src": "635:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWNS_$14911",
                        "typeString": "contract IWNS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8607,
                      "name": "_wns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8579,
                      "src": "641:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWNS_$14911",
                        "typeString": "contract IWNS"
                      }
                    },
                    "src": "635:10:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWNS_$14911",
                      "typeString": "contract IWNS"
                    }
                  },
                  "id": 8609,
                  "nodeType": "ExpressionStatement",
                  "src": "635:10:46"
                }
              ]
            },
            "id": 8611,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8582,
                    "name": "__cap__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8550,
                    "src": "506:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8583,
                "modifierName": {
                  "id": 8581,
                  "name": "HRC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5831,
                  "src": "494:11:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20Capped_$5831_$",
                    "typeString": "type(contract HRC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "494:20:46"
              },
              {
                "arguments": [
                  {
                    "hexValue": "536e6f7762616c6c",
                    "id": 8585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "521:10:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8336e7e847767346b0e2c29744e237c95db450727864464da37ae85d04bc56c3",
                      "typeString": "literal_string \"Snowball\""
                    },
                    "value": "Snowball"
                  },
                  {
                    "hexValue": "534e42",
                    "id": 8586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "532:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ec372daa1506c42ec17a145ad61919bc3ab9f43965345038c73d8e30f1e1a700",
                      "typeString": "literal_string \"SNB\""
                    },
                    "value": "SNB"
                  }
                ],
                "id": 8587,
                "modifierName": {
                  "id": 8584,
                  "name": "HRC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5694,
                  "src": "515:5:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20_$5694_$",
                    "typeString": "type(contract HRC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "515:23:46"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8575,
                  "mutability": "mutable",
                  "name": "dev",
                  "nodeType": "VariableDeclaration",
                  "scope": 8611,
                  "src": "454:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8577,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8611,
                  "src": "467:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8579,
                  "mutability": "mutable",
                  "name": "_wns",
                  "nodeType": "VariableDeclaration",
                  "scope": 8611,
                  "src": "483:9:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWNS_$14911",
                    "typeString": "contract IWNS"
                  },
                  "typeName": {
                    "id": 8578,
                    "name": "IWNS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14911,
                    "src": "483:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWNS_$14911",
                      "typeString": "contract IWNS"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:40:46"
            },
            "returnParameters": {
              "id": 8588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:46"
            },
            "scope": 8644,
            "src": "442:210:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8626,
              "nodeType": "Block",
              "src": "682:67:46",
              "statements": [
                {
                  "expression": {
                    "id": 8618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8614,
                      "name": "farm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8552,
                      "src": "692:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 8615,
                          "name": "wns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8556,
                          "src": "699:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWNS_$14911",
                            "typeString": "contract IWNS"
                          }
                        },
                        "id": 8616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "farm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14905,
                        "src": "699:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 8617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "699:10:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "692:17:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8619,
                  "nodeType": "ExpressionStatement",
                  "src": "692:17:46"
                },
                {
                  "expression": {
                    "id": 8624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8620,
                      "name": "lottery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8554,
                      "src": "719:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 8621,
                          "name": "wns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8556,
                          "src": "729:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWNS_$14911",
                            "typeString": "contract IWNS"
                          }
                        },
                        "id": 8622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lottery",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14910,
                        "src": "729:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 8623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "729:13:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "719:23:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8625,
                  "nodeType": "ExpressionStatement",
                  "src": "719:23:46"
                }
              ]
            },
            "functionSelector": "e1c7392a",
            "id": 8627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:46"
            },
            "returnParameters": {
              "id": 8613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:46"
            },
            "scope": 8644,
            "src": "658:91:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8642,
              "nodeType": "Block",
              "src": "911:36:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8638,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8630,
                        "src": "927:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8639,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8632,
                        "src": "932:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8637,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5570,
                      "src": "921:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "921:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8641,
                  "nodeType": "ExpressionStatement",
                  "src": "921:19:46"
                }
              ]
            },
            "documentation": {
              "id": 8628,
              "nodeType": "StructuredDocumentation",
              "src": "755:86:46",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (Farm)."
            },
            "functionSelector": "40c10f19",
            "id": 8643,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8635,
                "modifierName": {
                  "id": 8634,
                  "name": "onlyPermitted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8573,
                  "src": "897:13:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "897:13:46"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8630,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8643,
                  "src": "860:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8632,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8643,
                  "src": "873:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:30:46"
            },
            "returnParameters": {
              "id": 8636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:0:46"
            },
            "scope": 8644,
            "src": "846:101:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8645,
        "src": "139:810:46"
      }
    ],
    "src": "33:917:46"
  },
  "legacyAST": {
    "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol",
    "exportedSymbols": {
      "Context": [
        1285
      ],
      "HRC20": [
        5694
      ],
      "HRC20Capped": [
        5831
      ],
      "IHRC20": [
        6264
      ],
      "IWNS": [
        14911
      ],
      "SafeMath": [
        4438
      ],
      "Snowball": [
        8644
      ]
    },
    "id": 8645,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8539,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:46"
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20Capped.sol",
        "file": "../openzeppelin/token/HRC20/HRC20Capped.sol",
        "id": 8540,
        "nodeType": "ImportDirective",
        "scope": 8645,
        "sourceUnit": 5832,
        "src": "58:53:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/wns/IWNS.sol",
        "file": "../wns/IWNS.sol",
        "id": 8541,
        "nodeType": "ImportDirective",
        "scope": 8645,
        "sourceUnit": 14912,
        "src": "112:25:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8542,
              "name": "HRC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5831,
              "src": "160:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HRC20Capped_$5831",
                "typeString": "contract HRC20Capped"
              }
            },
            "id": 8543,
            "nodeType": "InheritanceSpecifier",
            "src": "160:11:46"
          }
        ],
        "contractDependencies": [
          1285,
          5694,
          5831,
          6264
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8644,
        "linearizedBaseContracts": [
          8644,
          5831,
          5694,
          6264,
          1285
        ],
        "name": "Snowball",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8550,
            "mutability": "constant",
            "name": "__cap__",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "179:42:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8544,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "179:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              },
              "id": 8549,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130303030303030",
                "id": 8545,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "206:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000_by_1",
                  "typeString": "int_const 10000000"
                },
                "value": "10000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 8548,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 8546,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "215:2:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 8547,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "219:2:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "215:6:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "206:15:46",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8552,
            "mutability": "mutable",
            "name": "farm",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "228:12:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8551,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "228:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8554,
            "mutability": "mutable",
            "name": "lottery",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "246:15:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8553,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "246:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8556,
            "mutability": "mutable",
            "name": "wns",
            "nodeType": "VariableDeclaration",
            "scope": 8644,
            "src": "267:8:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWNS_$14911",
              "typeString": "contract IWNS"
            },
            "typeName": {
              "id": 8555,
              "name": "IWNS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14911,
              "src": "267:4:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWNS_$14911",
                "typeString": "contract IWNS"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8572,
              "nodeType": "Block",
              "src": "307:129:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "325:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "325:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8561,
                            "name": "farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8552,
                            "src": "339:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "325:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8563,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "347:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "347:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8565,
                            "name": "lottery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8554,
                            "src": "361:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "347:21:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "325:43:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d69747465643a2063616c6c6572206973206e656974686572206661726d206e6f72206c6f7474657279",
                        "id": 8568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "370:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3e563ee2564cf478ab6062f0ca13c4728bd87c5467afb4946fd424ed510749f",
                          "typeString": "literal_string \"Permitted: caller is neither farm nor lottery\""
                        },
                        "value": "Permitted: caller is neither farm nor lottery"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3e563ee2564cf478ab6062f0ca13c4728bd87c5467afb4946fd424ed510749f",
                          "typeString": "literal_string \"Permitted: caller is neither farm nor lottery\""
                        }
                      ],
                      "id": 8558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "317:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "317:101:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8570,
                  "nodeType": "ExpressionStatement",
                  "src": "317:101:46"
                },
                {
                  "id": 8571,
                  "nodeType": "PlaceholderStatement",
                  "src": "428:1:46"
                }
              ]
            },
            "id": 8573,
            "name": "onlyPermitted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:46"
            },
            "src": "282:154:46",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8610,
              "nodeType": "Block",
              "src": "538:114:46",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 8594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8589,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8575,
                        "src": "551:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "566:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "558:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "558:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "558:10:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "551:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8595,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8577,
                        "src": "572:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "572:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "551:31:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8605,
                  "nodeType": "IfStatement",
                  "src": "548:78:46",
                  "trueBody": {
                    "id": 8604,
                    "nodeType": "Block",
                    "src": "583:43:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8600,
                              "name": "dev",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8575,
                              "src": "603:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8601,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8577,
                              "src": "608:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8599,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5570,
                            "src": "597:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 8602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "597:18:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8603,
                        "nodeType": "ExpressionStatement",
                        "src": "597:18:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8606,
                      "name": "wns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8556,
                      "src": "635:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWNS_$14911",
                        "typeString": "contract IWNS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8607,
                      "name": "_wns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8579,
                      "src": "641:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWNS_$14911",
                        "typeString": "contract IWNS"
                      }
                    },
                    "src": "635:10:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWNS_$14911",
                      "typeString": "contract IWNS"
                    }
                  },
                  "id": 8609,
                  "nodeType": "ExpressionStatement",
                  "src": "635:10:46"
                }
              ]
            },
            "id": 8611,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8582,
                    "name": "__cap__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8550,
                    "src": "506:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8583,
                "modifierName": {
                  "id": 8581,
                  "name": "HRC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5831,
                  "src": "494:11:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20Capped_$5831_$",
                    "typeString": "type(contract HRC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "494:20:46"
              },
              {
                "arguments": [
                  {
                    "hexValue": "536e6f7762616c6c",
                    "id": 8585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "521:10:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8336e7e847767346b0e2c29744e237c95db450727864464da37ae85d04bc56c3",
                      "typeString": "literal_string \"Snowball\""
                    },
                    "value": "Snowball"
                  },
                  {
                    "hexValue": "534e42",
                    "id": 8586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "532:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ec372daa1506c42ec17a145ad61919bc3ab9f43965345038c73d8e30f1e1a700",
                      "typeString": "literal_string \"SNB\""
                    },
                    "value": "SNB"
                  }
                ],
                "id": 8587,
                "modifierName": {
                  "id": 8584,
                  "name": "HRC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5694,
                  "src": "515:5:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20_$5694_$",
                    "typeString": "type(contract HRC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "515:23:46"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8575,
                  "mutability": "mutable",
                  "name": "dev",
                  "nodeType": "VariableDeclaration",
                  "scope": 8611,
                  "src": "454:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8577,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8611,
                  "src": "467:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8579,
                  "mutability": "mutable",
                  "name": "_wns",
                  "nodeType": "VariableDeclaration",
                  "scope": 8611,
                  "src": "483:9:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWNS_$14911",
                    "typeString": "contract IWNS"
                  },
                  "typeName": {
                    "id": 8578,
                    "name": "IWNS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14911,
                    "src": "483:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWNS_$14911",
                      "typeString": "contract IWNS"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:40:46"
            },
            "returnParameters": {
              "id": 8588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:46"
            },
            "scope": 8644,
            "src": "442:210:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8626,
              "nodeType": "Block",
              "src": "682:67:46",
              "statements": [
                {
                  "expression": {
                    "id": 8618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8614,
                      "name": "farm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8552,
                      "src": "692:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 8615,
                          "name": "wns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8556,
                          "src": "699:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWNS_$14911",
                            "typeString": "contract IWNS"
                          }
                        },
                        "id": 8616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "farm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14905,
                        "src": "699:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 8617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "699:10:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "692:17:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8619,
                  "nodeType": "ExpressionStatement",
                  "src": "692:17:46"
                },
                {
                  "expression": {
                    "id": 8624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8620,
                      "name": "lottery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8554,
                      "src": "719:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 8621,
                          "name": "wns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8556,
                          "src": "729:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWNS_$14911",
                            "typeString": "contract IWNS"
                          }
                        },
                        "id": 8622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lottery",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14910,
                        "src": "729:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 8623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "729:13:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "719:23:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8625,
                  "nodeType": "ExpressionStatement",
                  "src": "719:23:46"
                }
              ]
            },
            "functionSelector": "e1c7392a",
            "id": 8627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:46"
            },
            "returnParameters": {
              "id": 8613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:46"
            },
            "scope": 8644,
            "src": "658:91:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8642,
              "nodeType": "Block",
              "src": "911:36:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8638,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8630,
                        "src": "927:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8639,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8632,
                        "src": "932:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8637,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5570,
                      "src": "921:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "921:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8641,
                  "nodeType": "ExpressionStatement",
                  "src": "921:19:46"
                }
              ]
            },
            "documentation": {
              "id": 8628,
              "nodeType": "StructuredDocumentation",
              "src": "755:86:46",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (Farm)."
            },
            "functionSelector": "40c10f19",
            "id": 8643,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8635,
                "modifierName": {
                  "id": 8634,
                  "name": "onlyPermitted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8573,
                  "src": "897:13:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "897:13:46"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8630,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8643,
                  "src": "860:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8632,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8643,
                  "src": "873:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:30:46"
            },
            "returnParameters": {
              "id": 8636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:0:46"
            },
            "scope": 8644,
            "src": "846:101:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8645,
        "src": "139:810:46"
      }
    ],
    "src": "33:917:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {
    "256": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xdB8d2E55EdAa27FF8F9D2b503827A13130302c59",
      "transactionHash": "0xd3ad67b04518e0ffd21bc2e28fc7487b512918354726dd0a9e962d4f8c9b56f0"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-15T12:04:12.571Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IHRC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IHRC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IHRC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {HRC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IHRC20-balanceOf} and {IHRC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IHRC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IHRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IHRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {HRC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (Farm)."
      }
    },
    "version": 1
  }
}