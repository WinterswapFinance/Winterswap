{
  "contractName": "Snowball",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dev",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dev\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IHRC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IHRC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IHRC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {HRC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IHRC20-balanceOf} and {IHRC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IHRC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IHRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IHRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {HRC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (Farm).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol\":\"Snowball\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c\",\"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/access/Ownable.sol\":{\"keccak256\":\"0x46d2453e9db55eae25c9abdae2c42229086c54f1a6a247e8ce32658bb785f6ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198ef77ef5d9f7a7709d6bbfba1d4d54d82ccc15358e9dced37f1376dac887fa\",\"dweb:/ipfs/QmQHFvCA74s3AHU3NMn4AAYzFTt6UotWq7yk3WzLQs1oJS\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20.sol\":{\"keccak256\":\"0xd8bb97ac00ddd2cac35306608645be6ae76b35066cf2e63a9f13b80b6a31e895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f02a04c39e42dee0345c5de6071e481fc4f32f615249de085fae6b93a93e636\",\"dweb:/ipfs/QmcuRmz1jeqCPv7qUgKyskcPh5eyntbuqdgvWKRVYeUyBE\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20Capped.sol\":{\"keccak256\":\"0xa11e891a01077a2cda347243991ad7fc6f742d49ec105080b2984cd7a399b320\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63326a5baa7672a83a9dc3f2b2868d1d8950a1f2517d5e5bc38d6da78acc0fc6\",\"dweb:/ipfs/QmNnGd2KWdXbXFJncQTZ1e7wdPuhdx7dRAScRVmzJiniLt\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/IHRC20.sol\":{\"keccak256\":\"0x97e18cee8ca5b9f8e070167fd89ebe8f32265d00ee255f352d3706f4484aa93c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8e3489c9fcb251f5ba971143089e605549a2db852a5a50cf3313f0804a0a4f0\",\"dweb:/ipfs/Qmf5jb4uFjWqP1TuxzQSMU7TR9R8LXf3Na5CcPdvFZeoJp\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol\":{\"keccak256\":\"0xbd2e7f0af8fe1c87213b616265791650acbdc76075515a98c90625d1da9ed706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29438bc8dc5d5a7668bcc78dafa7768531ff23ec6236c9964a85b8d42cf23a2f\",\"dweb:/ipfs/QmPzAAAuw6u6yeneHmtzYVSyhauFXERFksgVVm37rBfQjj\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200131438038062001314833981810160405260208110156200003757600080fd5b5051604080518082018252600881526714db9bddd8985b1b60c21b6020828101918252835180850190945260038085526229a72160e91b9185019190915282516a084595161401484a0000009492620000919291620003a4565b508051620000a7906004906020840190620003a4565b50506005805460ff1916601217905550806200010a576040805162461bcd60e51b815260206004820152601560248201527f48524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b60065560006200011962000183565b600780546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200017c81683635c9adc5dea0000062000187565b5062000450565b3390565b6001600160a01b038216620001e3576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001f16000838362000296565b6200020d816002546200033c60201b6200089e1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002409183906200089e6200033c821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b620002ae8383836200033760201b620008ff1760201c565b6001600160a01b0383166200033757600654620002e382620002cf6200039e565b6200033c60201b6200089e1790919060201c565b111562000337576040805162461bcd60e51b815260206004820152601960248201527f48524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b505050565b60008282018381101562000397576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60025490565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003dc576000855562000427565b82601f10620003f757805160ff191683800117855562000427565b8280016001018555821562000427579182015b82811115620004275782518255916020019190600101906200040a565b506200043592915062000439565b5090565b5b808211156200043557600081556001016200043a565b610eb480620004606000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102ec578063a9059cbb14610318578063dd62ed3e14610344578063f2fde38b1461037257610100565b806370a0823114610292578063715018a6146102b85780638da5cb5b146102c057806395d89b41146102e457610100565b8063313ce567116100d3578063313ce56714610212578063355274ea14610230578063395093511461023857806340c10f191461026457610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610398565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561042e565b604080519115158252519081900360200190f35b6101ca61044b565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610451565b61021a6104d8565b6040805160ff9092168252519081900360200190f35b6101ca6104e1565b6101ae6004803603604081101561024e57600080fd5b506001600160a01b0381351690602001356104e7565b6102906004803603604081101561027a57600080fd5b506001600160a01b038135169060200135610535565b005b6101ca600480360360208110156102a857600080fd5b50356001600160a01b03166105ad565b6102906105c8565b6102c861067c565b604080516001600160a01b039092168252519081900360200190f35b61010d61068b565b6101ae6004803603604081101561030257600080fd5b506001600160a01b0381351690602001356106ec565b6101ae6004803603604081101561032e57600080fd5b506001600160a01b038135169060200135610754565b6101ca6004803603604081101561035a57600080fd5b506001600160a01b0381358116916020013516610768565b6102906004803603602081101561038857600080fd5b50356001600160a01b0316610793565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b5050505050905090565b600061044261043b610904565b8484610908565b50600192915050565b60025490565b600061045e8484846109f4565b6104ce8461046a610904565b6104c985604051806060016040528060288152602001610e10602891396001600160a01b038a166000908152600160205260408120906104a8610904565b6001600160a01b031681526020810191909152604001600020549190610b4f565b610908565b5060019392505050565b60055460ff1690565b60065490565b60006104426104f4610904565b846104c98560016000610505610904565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061089e565b61053d610904565b6007546001600160a01b0390811691161461059f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6105a98282610be6565b5050565b6001600160a01b031660009081526020819052604090205490565b6105d0610904565b6007546001600160a01b03908116911614610632576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6007546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600780546001600160a01b0319169055565b6007546001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b60006104426106f9610904565b846104c985604051806060016040528060258152602001610deb6025913960016000610723610904565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b4f565b6000610442610761610904565b84846109f4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61079b610904565b6007546001600160a01b039081169116146107fd576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108425760405162461bcd60e51b8152600401808060200182810382526026815260200180610d7a6026913960400191505060405180910390fd5b6007546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000828201838110156108f8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b505050565b3390565b6001600160a01b03831661094d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e5b6024913960400191505060405180910390fd5b6001600160a01b0382166109925760405162461bcd60e51b8152600401808060200182810382526022815260200180610d586022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a395760405162461bcd60e51b8152600401808060200182810382526025815260200180610da06025913960400191505060405180910390fd5b6001600160a01b038216610a7e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610e386023913960400191505060405180910390fd5b610a89838383610cd6565b610ac681604051806060016040528060268152602001610dc5602691396001600160a01b0386166000908152602081905260409020549190610b4f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610af5908261089e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bde5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ba3578181015183820152602001610b8b565b50505050905090810190601f168015610bd05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610c41576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610c4d60008383610cd6565b600254610c5a908261089e565b6002556001600160a01b038216600090815260208190526040902054610c80908261089e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610ce18383836108ff565b6001600160a01b0383166108ff57600654610d0482610cfe61044b565b9061089e565b11156108ff576040805162461bcd60e51b815260206004820152601960248201527f48524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fdfe48524332303a20617070726f766520746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737348524332303a207472616e736665722066726f6d20746865207a65726f206164647265737348524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636548524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f48524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636548524332303a207472616e7366657220746f20746865207a65726f206164647265737348524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a26469706673582212201311f0b3789d87f46553c073eee3d7c94183ccbe5289120024c13ba1c2f281df64736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102ec578063a9059cbb14610318578063dd62ed3e14610344578063f2fde38b1461037257610100565b806370a0823114610292578063715018a6146102b85780638da5cb5b146102c057806395d89b41146102e457610100565b8063313ce567116100d3578063313ce56714610212578063355274ea14610230578063395093511461023857806340c10f191461026457610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610398565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561042e565b604080519115158252519081900360200190f35b6101ca61044b565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610451565b61021a6104d8565b6040805160ff9092168252519081900360200190f35b6101ca6104e1565b6101ae6004803603604081101561024e57600080fd5b506001600160a01b0381351690602001356104e7565b6102906004803603604081101561027a57600080fd5b506001600160a01b038135169060200135610535565b005b6101ca600480360360208110156102a857600080fd5b50356001600160a01b03166105ad565b6102906105c8565b6102c861067c565b604080516001600160a01b039092168252519081900360200190f35b61010d61068b565b6101ae6004803603604081101561030257600080fd5b506001600160a01b0381351690602001356106ec565b6101ae6004803603604081101561032e57600080fd5b506001600160a01b038135169060200135610754565b6101ca6004803603604081101561035a57600080fd5b506001600160a01b0381358116916020013516610768565b6102906004803603602081101561038857600080fd5b50356001600160a01b0316610793565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b5050505050905090565b600061044261043b610904565b8484610908565b50600192915050565b60025490565b600061045e8484846109f4565b6104ce8461046a610904565b6104c985604051806060016040528060288152602001610e10602891396001600160a01b038a166000908152600160205260408120906104a8610904565b6001600160a01b031681526020810191909152604001600020549190610b4f565b610908565b5060019392505050565b60055460ff1690565b60065490565b60006104426104f4610904565b846104c98560016000610505610904565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061089e565b61053d610904565b6007546001600160a01b0390811691161461059f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6105a98282610be6565b5050565b6001600160a01b031660009081526020819052604090205490565b6105d0610904565b6007546001600160a01b03908116911614610632576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6007546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600780546001600160a01b0319169055565b6007546001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b60006104426106f9610904565b846104c985604051806060016040528060258152602001610deb6025913960016000610723610904565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b4f565b6000610442610761610904565b84846109f4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61079b610904565b6007546001600160a01b039081169116146107fd576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108425760405162461bcd60e51b8152600401808060200182810382526026815260200180610d7a6026913960400191505060405180910390fd5b6007546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000828201838110156108f8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b505050565b3390565b6001600160a01b03831661094d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e5b6024913960400191505060405180910390fd5b6001600160a01b0382166109925760405162461bcd60e51b8152600401808060200182810382526022815260200180610d586022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a395760405162461bcd60e51b8152600401808060200182810382526025815260200180610da06025913960400191505060405180910390fd5b6001600160a01b038216610a7e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610e386023913960400191505060405180910390fd5b610a89838383610cd6565b610ac681604051806060016040528060268152602001610dc5602691396001600160a01b0386166000908152602081905260409020549190610b4f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610af5908261089e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bde5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ba3578181015183820152602001610b8b565b50505050905090810190601f168015610bd05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610c41576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610c4d60008383610cd6565b600254610c5a908261089e565b6002556001600160a01b038216600090815260208190526040902054610c80908261089e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610ce18383836108ff565b6001600160a01b0383166108ff57600654610d0482610cfe61044b565b9061089e565b11156108ff576040805162461bcd60e51b815260206004820152601960248201527f48524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fdfe48524332303a20617070726f766520746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737348524332303a207472616e736665722066726f6d20746865207a65726f206164647265737348524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636548524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f48524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636548524332303a207472616e7366657220746f20746865207a65726f206164647265737348524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a26469706673582212201311f0b3789d87f46553c073eee3d7c94183ccbe5289120024c13ba1c2f281df64736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "158:429:45:-:0;;;269:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:122:45;1948:138:27;;;;;;;;;;;-1:-1:-1;;;269:122:45;1948:138:27;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1948:138:27;;;;;;;2015:13;;234:28:45;;1948:138:27;2015:13;;1948:138;2015:13;:::i;:::-;-1:-1:-1;2038:17:27;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2065:9:27;:14;;-1:-1:-1;;2065:14:27;2077:2;2065:14;;;-1:-1:-1;443:8:29;435:42;;;;;-1:-1:-1;;;435:42:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:4;:11;865:17:9;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:9;-1:-1:-1;;;;;907:18:9;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:9;-1:-1:-1;;940:43:9;;-1:-1:-1;;940:43:9;-1:-1:-1;348:36:45::2;354:3:::0;359:24:::2;348:5;:36::i;:::-;269:122:::0;158:429;;590:104:2;677:10;590:104;:::o;7775:370:27:-;-1:-1:-1;;;;;7858:21:27;;7850:65;;;;;-1:-1:-1;;;7850:65:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:49;7955:1;7959:7;7968:6;7926:20;:49::i;:::-;8001:24;8018:6;8001:12;;:16;;;;;;:24;;;;:::i;:::-;7986:12;:39;-1:-1:-1;;;;;8056:18:27;;:9;:18;;;;;;;;;;;;:30;;8079:6;;8056:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8035:18:27;;:9;:18;;;;;;;;;;;:51;;;;8101:37;;;;;;;8035:18;;:9;;8101:37;;;;;;;;;;7775:370;;:::o;835:312:29:-;943:44;970:4;976:2;980:6;943:26;;;;;:44;;:::i;:::-;-1:-1:-1;;;;;1002:18:29;;998:143;;1096:4;;1067:25;1085:6;1067:13;:11;:13::i;:::-;:17;;;;;;:25;;;;:::i;:::-;:33;;1059:71;;;;;-1:-1:-1;;;1059:71:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:312;;;:::o;874:176:20:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:20:o;3194:98:27:-;3273:12;;3194:98;:::o;158:429:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;158:429:45;;;-1:-1:-1;158:429:45;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "158:429:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:81:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4187:166:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3194:98;;;:::i;:::-;;;;;;;;;;;;;;;;4820:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4820:317:27;;;;;;;;;;;;;;;;;:::i;3053:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;584:73:29;;;:::i;5532:215:27:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5532:215:27;;;;;;;;:::i;488:97:45:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;488:97:45;;;;;;;;:::i;:::-;;3350:117:27;;;;;;;;;;;;;;;;-1:-1:-1;3350:117:27;-1:-1:-1;;;;;3350:117:27;;:::i;1689:145:9:-;;;:::i;1066:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1066:77:9;;;;;;;;;;;;;;2345:85:27;;;:::i;6234:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6234:266:27;;;;;;;;:::i;3670:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3670:172:27;;;;;;;;:::i;3900:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3900:149:27;;;;;;;;;;:::i;1983:240:9:-;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:9;-1:-1:-1;;;;;1983:240:9;;:::i;2151:81:27:-;2220:5;2213:12;;;;;;;;-1:-1:-1;;2213:12:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:13;;2213:12;;2220:5;;2213:12;;2220:5;2213:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:81;:::o;4187:166::-;4270:4;4286:39;4295:12;:10;:12::i;:::-;4309:7;4318:6;4286:8;:39::i;:::-;-1:-1:-1;4342:4:27;4187:166;;;;:::o;3194:98::-;3273:12;;3194:98;:::o;4820:317::-;4926:4;4942:36;4952:6;4960:9;4971:6;4942:9;:36::i;:::-;4988:121;4997:6;5005:12;:10;:12::i;:::-;5019:89;5057:6;5019:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5019:19:27;;;;;;:11;:19;;;;;;5039:12;:10;:12::i;:::-;-1:-1:-1;;;;;5019:33:27;;;;;;;;;;;;-1:-1:-1;5019:33:27;;;:89;:37;:89::i;:::-;4988:8;:121::i;:::-;-1:-1:-1;5126:4:27;4820:317;;;;;:::o;3053:81::-;3118:9;;;;3053:81;:::o;584:73:29:-;646:4;;584:73;:::o;5532:215:27:-;5620:4;5636:83;5645:12;:10;:12::i;:::-;5659:7;5668:50;5707:10;5668:11;:25;5680:12;:10;:12::i;:::-;-1:-1:-1;;;;;5668:25:27;;;;;;;;;;;;;;;;;-1:-1:-1;5668:25:27;;;:34;;;;;;;;;;;:38;:50::i;488:97:45:-;1280:12:9;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:9;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:19:45::1;565:3;570:7;559:5;:19::i;:::-;488:97:::0;;:::o;3350:117:27:-;-1:-1:-1;;;;;3442:18:27;3416:7;3442:18;;;;;;;;;;;;3350:117::o;1689:145:9:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:9;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;-1:-1:-1;;;;;1779:6:9::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:9::1;::::0;;1689:145::o;1066:77::-;1130:6;;-1:-1:-1;;;;;1130:6:9;1066:77;:::o;2345:85:27:-;2416:7;2409:14;;;;;;;;-1:-1:-1;;2409:14:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:13;;2409:14;;2416:7;;2409:14;;2416:7;2409:14;;;;;;;;;;;;;;;;;;;;;;;;6234:266;6327:4;6343:129;6352:12;:10;:12::i;:::-;6366:7;6375:96;6414:15;6375:96;;;;;;;;;;;;;;;;;:11;:25;6387:12;:10;:12::i;:::-;-1:-1:-1;;;;;6375:25:27;;;;;;;;;;;;;;;;;-1:-1:-1;6375:25:27;;;:34;;;;;;;;;;;:96;:38;:96::i;3670:172::-;3756:4;3772:42;3782:12;:10;:12::i;:::-;3796:9;3807:6;3772:9;:42::i;3900:149::-;-1:-1:-1;;;;;4015:18:27;;;3989:7;4015:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3900:149::o;1983:240:9:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:9;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:9;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:9::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:9;;::::1;::::0;2172:6:::1;::::0;2151:38:::1;::::0;2172:6:::1;::::0;2151:38:::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:9::1;-1:-1:-1::0;;;;;2199:17:9;;;::::1;::::0;;;::::1;::::0;;1983:240::o;874:176:20:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:20:o;10636:92:27:-;;;;:::o;590:104:2:-;677:10;590:104;:::o;9298:340:27:-;-1:-1:-1;;;;;9399:19:27;;9391:68;;;;-1:-1:-1;;;9391:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9477:21:27;;9469:68;;;;-1:-1:-1;;;9469:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9548:18:27;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9599:32;;;;;;;;;;;;;;;;;9298:340;;;:::o;6974:530::-;-1:-1:-1;;;;;7079:20:27;;7071:70;;;;-1:-1:-1;;;7071:70:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7159:23:27;;7151:71;;;;-1:-1:-1;;;7151:71:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7233:47;7254:6;7262:9;7273:6;7233:20;:47::i;:::-;7311:71;7333:6;7311:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7311:17:27;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7291:17:27;;;:9;:17;;;;;;;;;;;:91;;;;7415:20;;;;;;;:32;;7440:6;7415:24;:32::i;:::-;-1:-1:-1;;;;;7392:20:27;;;:9;:20;;;;;;;;;;;;:55;;;;7462:35;;;;;;;7392:20;;7462:35;;;;;;;;;;;;;6974:530;;;:::o;1746:187:20:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:20;;;1746:187::o;7775:370:27:-;-1:-1:-1;;;;;7858:21:27;;7850:65;;;;;-1:-1:-1;;;7850:65:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:49;7955:1;7959:7;7968:6;7926:20;:49::i;:::-;8001:12;;:24;;8018:6;8001:16;:24::i;:::-;7986:12;:39;-1:-1:-1;;;;;8056:18:27;;:9;:18;;;;;;;;;;;:30;;8079:6;8056:22;:30::i;:::-;-1:-1:-1;;;;;8035:18:27;;:9;:18;;;;;;;;;;;:51;;;;8101:37;;;;;;;8035:18;;:9;;8101:37;;;;;;;;;;7775:370;;:::o;835:312:29:-;943:44;970:4;976:2;980:6;943:26;:44::i;:::-;-1:-1:-1;;;;;1002:18:29;;998:143;;1096:4;;1067:25;1085:6;1067:13;:11;:13::i;:::-;:17;;:25::i;:::-;:33;;1059:71;;;;;-1:-1:-1;;;1059:71:29;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/token/HRC20/HRC20Capped.sol\";\nimport \"../openzeppelin/access/Ownable.sol\";\n\ncontract Snowball is HRC20Capped, Ownable {\n\n    uint256 constant __cap__ = 1000000000000000000*10000000;\n\n    constructor(address dev) HRC20Capped(__cap__) HRC20(\"Snowball\",\"SNB\"){\n        _mint(dev, 1000000000000000000*1000);\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (Farm).\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n    }\n}\n",
  "sourcePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol",
  "ast": {
    "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol",
    "exportedSymbols": {
      "Context": [
        884
      ],
      "HRC20": [
        5293
      ],
      "HRC20Capped": [
        5430
      ],
      "IHRC20": [
        5863
      ],
      "Ownable": [
        2440
      ],
      "SafeMath": [
        4037
      ],
      "Snowball": [
        8186
      ]
    },
    "id": 8187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8138,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:45"
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20Capped.sol",
        "file": "../openzeppelin/token/HRC20/HRC20Capped.sol",
        "id": 8139,
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 5431,
        "src": "58:53:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/access/Ownable.sol",
        "file": "../openzeppelin/access/Ownable.sol",
        "id": 8140,
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 2441,
        "src": "112:44:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8141,
              "name": "HRC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5430,
              "src": "179:11:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HRC20Capped_$5430",
                "typeString": "contract HRC20Capped"
              }
            },
            "id": 8142,
            "nodeType": "InheritanceSpecifier",
            "src": "179:11:45"
          },
          {
            "baseName": {
              "id": 8143,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2440,
              "src": "192:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2440",
                "typeString": "contract Ownable"
              }
            },
            "id": 8144,
            "nodeType": "InheritanceSpecifier",
            "src": "192:7:45"
          }
        ],
        "contractDependencies": [
          884,
          2440,
          5293,
          5430,
          5863
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8186,
        "linearizedBaseContracts": [
          8186,
          2440,
          5430,
          5293,
          5863,
          884
        ],
        "name": "Snowball",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8149,
            "mutability": "constant",
            "name": "__cap__",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "207:55:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8145,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "207:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              },
              "id": 8148,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31303030303030303030303030303030303030",
                "id": 8146,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "234:19:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1000000000000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3130303030303030",
                "id": 8147,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "254:8:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000_by_1",
                  "typeString": "int_const 10000000"
                },
                "value": "10000000"
              },
              "src": "234:28:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8168,
              "nodeType": "Block",
              "src": "338:53:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8162,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8151,
                        "src": "354:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 8165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030303030303030303030303030",
                          "id": 8163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "359:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1000000000000000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 8164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "379:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "359:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 8161,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5169,
                      "src": "348:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "348:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8167,
                  "nodeType": "ExpressionStatement",
                  "src": "348:36:45"
                }
              ]
            },
            "id": 8169,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8154,
                    "name": "__cap__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8149,
                    "src": "306:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8155,
                "modifierName": {
                  "id": 8153,
                  "name": "HRC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5430,
                  "src": "294:11:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20Capped_$5430_$",
                    "typeString": "type(contract HRC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "294:20:45"
              },
              {
                "arguments": [
                  {
                    "hexValue": "536e6f7762616c6c",
                    "id": 8157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "321:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8336e7e847767346b0e2c29744e237c95db450727864464da37ae85d04bc56c3",
                      "typeString": "literal_string \"Snowball\""
                    },
                    "value": "Snowball"
                  },
                  {
                    "hexValue": "534e42",
                    "id": 8158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "332:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ec372daa1506c42ec17a145ad61919bc3ab9f43965345038c73d8e30f1e1a700",
                      "typeString": "literal_string \"SNB\""
                    },
                    "value": "SNB"
                  }
                ],
                "id": 8159,
                "modifierName": {
                  "id": 8156,
                  "name": "HRC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5293,
                  "src": "315:5:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20_$5293_$",
                    "typeString": "type(contract HRC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "315:23:45"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8151,
                  "mutability": "mutable",
                  "name": "dev",
                  "nodeType": "VariableDeclaration",
                  "scope": 8169,
                  "src": "281:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:13:45"
            },
            "returnParameters": {
              "id": 8160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:0:45"
            },
            "scope": 8186,
            "src": "269:122:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8184,
              "nodeType": "Block",
              "src": "549:36:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8180,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8172,
                        "src": "565:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8181,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8174,
                        "src": "570:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8179,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5169,
                      "src": "559:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:19:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8183,
                  "nodeType": "ExpressionStatement",
                  "src": "559:19:45"
                }
              ]
            },
            "documentation": {
              "id": 8170,
              "nodeType": "StructuredDocumentation",
              "src": "397:86:45",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (Farm)."
            },
            "functionSelector": "40c10f19",
            "id": 8185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8177,
                "modifierName": {
                  "id": 8176,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2389,
                  "src": "539:9:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "539:9:45"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8172,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8185,
                  "src": "502:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8174,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8185,
                  "src": "515:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:30:45"
            },
            "returnParameters": {
              "id": 8178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:45"
            },
            "scope": 8186,
            "src": "488:97:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8187,
        "src": "158:429:45"
      }
    ],
    "src": "33:555:45"
  },
  "legacyAST": {
    "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowball/Snowball.sol",
    "exportedSymbols": {
      "Context": [
        884
      ],
      "HRC20": [
        5293
      ],
      "HRC20Capped": [
        5430
      ],
      "IHRC20": [
        5863
      ],
      "Ownable": [
        2440
      ],
      "SafeMath": [
        4037
      ],
      "Snowball": [
        8186
      ]
    },
    "id": 8187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8138,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:45"
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20Capped.sol",
        "file": "../openzeppelin/token/HRC20/HRC20Capped.sol",
        "id": 8139,
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 5431,
        "src": "58:53:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/access/Ownable.sol",
        "file": "../openzeppelin/access/Ownable.sol",
        "id": 8140,
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 2441,
        "src": "112:44:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8141,
              "name": "HRC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5430,
              "src": "179:11:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HRC20Capped_$5430",
                "typeString": "contract HRC20Capped"
              }
            },
            "id": 8142,
            "nodeType": "InheritanceSpecifier",
            "src": "179:11:45"
          },
          {
            "baseName": {
              "id": 8143,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2440,
              "src": "192:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2440",
                "typeString": "contract Ownable"
              }
            },
            "id": 8144,
            "nodeType": "InheritanceSpecifier",
            "src": "192:7:45"
          }
        ],
        "contractDependencies": [
          884,
          2440,
          5293,
          5430,
          5863
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8186,
        "linearizedBaseContracts": [
          8186,
          2440,
          5430,
          5293,
          5863,
          884
        ],
        "name": "Snowball",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8149,
            "mutability": "constant",
            "name": "__cap__",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "207:55:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8145,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "207:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              },
              "id": 8148,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31303030303030303030303030303030303030",
                "id": 8146,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "234:19:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1000000000000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3130303030303030",
                "id": 8147,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "254:8:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000_by_1",
                  "typeString": "int_const 10000000"
                },
                "value": "10000000"
              },
              "src": "234:28:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8168,
              "nodeType": "Block",
              "src": "338:53:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8162,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8151,
                        "src": "354:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 8165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030303030303030303030303030",
                          "id": 8163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "359:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1000000000000000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 8164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "379:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "359:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 8161,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5169,
                      "src": "348:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "348:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8167,
                  "nodeType": "ExpressionStatement",
                  "src": "348:36:45"
                }
              ]
            },
            "id": 8169,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8154,
                    "name": "__cap__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8149,
                    "src": "306:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8155,
                "modifierName": {
                  "id": 8153,
                  "name": "HRC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5430,
                  "src": "294:11:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20Capped_$5430_$",
                    "typeString": "type(contract HRC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "294:20:45"
              },
              {
                "arguments": [
                  {
                    "hexValue": "536e6f7762616c6c",
                    "id": 8157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "321:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8336e7e847767346b0e2c29744e237c95db450727864464da37ae85d04bc56c3",
                      "typeString": "literal_string \"Snowball\""
                    },
                    "value": "Snowball"
                  },
                  {
                    "hexValue": "534e42",
                    "id": 8158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "332:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ec372daa1506c42ec17a145ad61919bc3ab9f43965345038c73d8e30f1e1a700",
                      "typeString": "literal_string \"SNB\""
                    },
                    "value": "SNB"
                  }
                ],
                "id": 8159,
                "modifierName": {
                  "id": 8156,
                  "name": "HRC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5293,
                  "src": "315:5:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HRC20_$5293_$",
                    "typeString": "type(contract HRC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "315:23:45"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8151,
                  "mutability": "mutable",
                  "name": "dev",
                  "nodeType": "VariableDeclaration",
                  "scope": 8169,
                  "src": "281:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:13:45"
            },
            "returnParameters": {
              "id": 8160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:0:45"
            },
            "scope": 8186,
            "src": "269:122:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8184,
              "nodeType": "Block",
              "src": "549:36:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8180,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8172,
                        "src": "565:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8181,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8174,
                        "src": "570:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8179,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5169,
                      "src": "559:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:19:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8183,
                  "nodeType": "ExpressionStatement",
                  "src": "559:19:45"
                }
              ]
            },
            "documentation": {
              "id": 8170,
              "nodeType": "StructuredDocumentation",
              "src": "397:86:45",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (Farm)."
            },
            "functionSelector": "40c10f19",
            "id": 8185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8177,
                "modifierName": {
                  "id": 8176,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2389,
                  "src": "539:9:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "539:9:45"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8172,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8185,
                  "src": "502:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8174,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8185,
                  "src": "515:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:30:45"
            },
            "returnParameters": {
              "id": 8178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:45"
            },
            "scope": 8186,
            "src": "488:97:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8187,
        "src": "158:429:45"
      }
    ],
    "src": "33:555:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {
    "256": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc94d5C510a44c16c80d97f95a2D1F2eA5AcFD902",
      "transactionHash": "0xcba078c2fb4fe04a2d2364aa2bc083580c08b3fe8c0d50b7036781879b83c9e5"
    },
    "711": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x30DF80CE1Eab930D10bCE5149b28cD84c78Ed26A",
      "transactionHash": "0x5e162c7e2c77b3cf922bbc7dbdec43eef3ac28737a42d3f9a062402b3459f5c7"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-14T18:08:05.838Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IHRC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IHRC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IHRC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {HRC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IHRC20-balanceOf} and {IHRC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IHRC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IHRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IHRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {HRC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (Farm)."
      }
    },
    "version": 1
  }
}