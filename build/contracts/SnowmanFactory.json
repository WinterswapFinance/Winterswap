{
  "contractName": "SnowmanFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IHRC20",
          "name": "_snowball",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "snowball",
      "outputs": [
        {
          "internalType": "contract IHRC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount_snowball",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount_snowman",
          "type": "uint256"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IHRC20\",\"name\":\"_snowball\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount_snowman\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snowball\",\"outputs\":[{\"internalType\":\"contract IHRC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount_snowball\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IHRC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IHRC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IHRC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {HRC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IHRC20-balanceOf} and {IHRC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IHRC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IHRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IHRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {HRC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/lycrus/WebstormProjects/WinterSwap/contracts/snowman/SnowmanFactory.sol\":\"SnowmanFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c\",\"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20.sol\":{\"keccak256\":\"0xd8bb97ac00ddd2cac35306608645be6ae76b35066cf2e63a9f13b80b6a31e895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f02a04c39e42dee0345c5de6071e481fc4f32f615249de085fae6b93a93e636\",\"dweb:/ipfs/QmcuRmz1jeqCPv7qUgKyskcPh5eyntbuqdgvWKRVYeUyBE\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/IHRC20.sol\":{\"keccak256\":\"0x97e18cee8ca5b9f8e070167fd89ebe8f32265d00ee255f352d3706f4484aa93c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8e3489c9fcb251f5ba971143089e605549a2db852a5a50cf3313f0804a0a4f0\",\"dweb:/ipfs/Qmf5jb4uFjWqP1TuxzQSMU7TR9R8LXf3Na5CcPdvFZeoJp\"]},\"/home/lycrus/WebstormProjects/WinterSwap/contracts/snowman/SnowmanFactory.sol\":{\"keccak256\":\"0x14ffe6213338e175834b2c13aba95f2da5c4200c429d35e984eb530ac65c61ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84542468bb1d8640fc4ce33adda4463b0c2d94c06b884b373904fa77c1d6735b\",\"dweb:/ipfs/QmRvbbtovqTQ6g5Reg6SEP6YCEKuBYmvNxMKFx2EYV2x9D\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200126938038062001269833981810160405260208110156200003757600080fd5b5051604080518082018252600f81526e536e6f776d616e20466163746f727960881b60208281019182528351808501909452600380855262534e4d60e81b9185019190915282519293926200008d9290620000dd565b508051620000a3906004906020840190620000dd565b5050600580546001600160a01b0390931661010002610100600160a81b031960ff1990941660121793909316929092179091555062000189565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000115576000855562000160565b82601f106200013057805160ff191683800117855562000160565b8280016001018555821562000160579182015b828111156200016057825182559160200191906001019062000143565b506200016e92915062000172565b5090565b5b808211156200016e576000815560010162000173565b6110d080620001996000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146102b7578063a694fc3a146102e3578063a9059cbb14610300578063dd62ed3e1461032c576100ea565b8063395093511461025d57806370a082311461028957806395d89b41146102af576100ea565b806323b872dd116100c857806323b872dd146101c6578063278ecde1146101fc57806328f2642f1461021b578063313ce5671461023f576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761035a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b0381351690602001356103f0565b604080519115158252519081900360200190f35b6101b461040e565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610414565b6102196004803603602081101561021257600080fd5b503561049b565b005b6102236105e0565b604080516001600160a01b039092168252519081900360200190f35b6102476105f4565b6040805160ff9092168252519081900360200190f35b6101986004803603604081101561027357600080fd5b506001600160a01b0381351690602001356105fd565b6101b46004803603602081101561029f57600080fd5b50356001600160a01b031661064b565b6100f7610666565b610198600480360360408110156102cd57600080fd5b506001600160a01b0381351690602001356106c7565b610219600480360360208110156102f957600080fd5b503561072f565b6101986004803603604081101561031657600080fd5b506001600160a01b038135169060200135610885565b6101b46004803603604081101561034257600080fd5b506001600160a01b0381358116916020013516610899565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b60006104046103fd6108c4565b84846108c8565b5060015b92915050565b60025490565b60006104218484846109b4565b6104918461042d6108c4565b61048c85604051806060016040528060288152602001610fc8602891396001600160a01b038a1660009081526001602052604081209061046b6108c4565b6001600160a01b031681526020810191909152604001600020549190610b0f565b6108c8565b5060019392505050565b60006104a561040e565b9050600061054b82610545600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561051257600080fd5b505afa158015610526573d6000803e3d6000fd5b505050506040513d602081101561053c57600080fd5b50518690610ba6565b90610c06565b90506105573384610c48565b6005546040805163a9059cbb60e01b81523360048201526024810184905290516101009092046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b505050506040513d60208110156105d957600080fd5b5050505050565b60055461010090046001600160a01b031681565b60055460ff1690565b600061040461060a6108c4565b8461048c856001600061061b6108c4565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610d44565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e65780601f106103bb576101008083540402835291602001916103e6565b60006104046106d46108c4565b8461048c85604051806060016040528060258152602001610fa360259139600160006106fe6108c4565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b0f565b600554604080516323b872dd60e01b81523360048201523060248201526044810184905290516101009092046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b15801561078d57600080fd5b505af11580156107a1573d6000803e3d6000fd5b505050506040513d60208110156107b757600080fd5b5050600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561080957600080fd5b505afa15801561081d573d6000803e3d6000fd5b505050506040513d602081101561083357600080fd5b50519050600061084161040e565b905080158061084e575081155b156108625761085d3384610d9e565b610880565b6000610872836105458685610ba6565b905061087e3382610d9e565b505b505050565b60006104046108926108c4565b84846109b4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661090d5760405162461bcd60e51b81526004018080602001828103825260248152602001806110776024913960400191505060405180910390fd5b6001600160a01b0382166109525760405162461bcd60e51b8152600401808060200182810382526022815260200180610f366022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109f95760405162461bcd60e51b8152600401808060200182810382526025815260200180610f586025913960400191505060405180910390fd5b6001600160a01b038216610a3e5760405162461bcd60e51b81526004018080602001828103825260238152602001806110326023913960400191505060405180910390fd5b610a49838383610880565b610a8681604051806060016040528060268152602001610f7d602691396001600160a01b0386166000908152602081905260409020549190610b0f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610ab59082610d44565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b9e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b63578181015183820152602001610b4b565b50505050905090810190601f168015610b905780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610bb557506000610408565b82820282848281610bc257fe5b0414610bff5760405162461bcd60e51b81526004018080602001828103825260218152602001806110116021913960400191505060405180910390fd5b9392505050565b6000610bff83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e8e565b6001600160a01b038216610c8d5760405162461bcd60e51b8152600401808060200182810382526021815260200180610ff06021913960400191505060405180910390fd5b610c9982600083610880565b610cd681604051806060016040528060228152602001611055602291396001600160a01b0385166000908152602081905260409020549190610b0f565b6001600160a01b038316600090815260208190526040902055600254610cfc9082610ef3565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082820183811015610bff576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216610df9576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610e0560008383610880565b600254610e129082610d44565b6002556001600160a01b038216600090815260208190526040902054610e389082610d44565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183610edd5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b63578181015183820152602001610b4b565b506000838581610ee957fe5b0495945050505050565b6000610bff83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b0f56fe48524332303a20617070726f766520746f20746865207a65726f206164647265737348524332303a207472616e736665722066726f6d20746865207a65726f206164647265737348524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636548524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f48524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636548524332303a206275726e2066726f6d20746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7748524332303a207472616e7366657220746f20746865207a65726f206164647265737348524332303a206275726e20616d6f756e7420657863656564732062616c616e636548524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a26469706673582212207109da3a88dd1631fb0cc35148dce1b4bfb5d55acd71329eb7ace3ad132f167564736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146102b7578063a694fc3a146102e3578063a9059cbb14610300578063dd62ed3e1461032c576100ea565b8063395093511461025d57806370a082311461028957806395d89b41146102af576100ea565b806323b872dd116100c857806323b872dd146101c6578063278ecde1146101fc57806328f2642f1461021b578063313ce5671461023f576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761035a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b0381351690602001356103f0565b604080519115158252519081900360200190f35b6101b461040e565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610414565b6102196004803603602081101561021257600080fd5b503561049b565b005b6102236105e0565b604080516001600160a01b039092168252519081900360200190f35b6102476105f4565b6040805160ff9092168252519081900360200190f35b6101986004803603604081101561027357600080fd5b506001600160a01b0381351690602001356105fd565b6101b46004803603602081101561029f57600080fd5b50356001600160a01b031661064b565b6100f7610666565b610198600480360360408110156102cd57600080fd5b506001600160a01b0381351690602001356106c7565b610219600480360360208110156102f957600080fd5b503561072f565b6101986004803603604081101561031657600080fd5b506001600160a01b038135169060200135610885565b6101b46004803603604081101561034257600080fd5b506001600160a01b0381358116916020013516610899565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b60006104046103fd6108c4565b84846108c8565b5060015b92915050565b60025490565b60006104218484846109b4565b6104918461042d6108c4565b61048c85604051806060016040528060288152602001610fc8602891396001600160a01b038a1660009081526001602052604081209061046b6108c4565b6001600160a01b031681526020810191909152604001600020549190610b0f565b6108c8565b5060019392505050565b60006104a561040e565b9050600061054b82610545600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561051257600080fd5b505afa158015610526573d6000803e3d6000fd5b505050506040513d602081101561053c57600080fd5b50518690610ba6565b90610c06565b90506105573384610c48565b6005546040805163a9059cbb60e01b81523360048201526024810184905290516101009092046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b505050506040513d60208110156105d957600080fd5b5050505050565b60055461010090046001600160a01b031681565b60055460ff1690565b600061040461060a6108c4565b8461048c856001600061061b6108c4565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610d44565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e65780601f106103bb576101008083540402835291602001916103e6565b60006104046106d46108c4565b8461048c85604051806060016040528060258152602001610fa360259139600160006106fe6108c4565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b0f565b600554604080516323b872dd60e01b81523360048201523060248201526044810184905290516101009092046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b15801561078d57600080fd5b505af11580156107a1573d6000803e3d6000fd5b505050506040513d60208110156107b757600080fd5b5050600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561080957600080fd5b505afa15801561081d573d6000803e3d6000fd5b505050506040513d602081101561083357600080fd5b50519050600061084161040e565b905080158061084e575081155b156108625761085d3384610d9e565b610880565b6000610872836105458685610ba6565b905061087e3382610d9e565b505b505050565b60006104046108926108c4565b84846109b4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661090d5760405162461bcd60e51b81526004018080602001828103825260248152602001806110776024913960400191505060405180910390fd5b6001600160a01b0382166109525760405162461bcd60e51b8152600401808060200182810382526022815260200180610f366022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109f95760405162461bcd60e51b8152600401808060200182810382526025815260200180610f586025913960400191505060405180910390fd5b6001600160a01b038216610a3e5760405162461bcd60e51b81526004018080602001828103825260238152602001806110326023913960400191505060405180910390fd5b610a49838383610880565b610a8681604051806060016040528060268152602001610f7d602691396001600160a01b0386166000908152602081905260409020549190610b0f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610ab59082610d44565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b9e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b63578181015183820152602001610b4b565b50505050905090810190601f168015610b905780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610bb557506000610408565b82820282848281610bc257fe5b0414610bff5760405162461bcd60e51b81526004018080602001828103825260218152602001806110116021913960400191505060405180910390fd5b9392505050565b6000610bff83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e8e565b6001600160a01b038216610c8d5760405162461bcd60e51b8152600401808060200182810382526021815260200180610ff06021913960400191505060405180910390fd5b610c9982600083610880565b610cd681604051806060016040528060228152602001611055602291396001600160a01b0385166000908152602081905260409020549190610b0f565b6001600160a01b038316600090815260208190526040902055600254610cfc9082610ef3565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082820183811015610bff576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216610df9576040805162461bcd60e51b815260206004820152601f60248201527f48524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610e0560008383610880565b600254610e129082610d44565b6002556001600160a01b038216600090815260208190526040902054610e389082610d44565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183610edd5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b63578181015183820152602001610b4b565b506000838581610ee957fe5b0495945050505050565b6000610bff83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b0f56fe48524332303a20617070726f766520746f20746865207a65726f206164647265737348524332303a207472616e736665722066726f6d20746865207a65726f206164647265737348524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636548524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f48524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636548524332303a206275726e2066726f6d20746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7748524332303a207472616e7366657220746f20746865207a65726f206164647265737348524332303a206275726e20616d6f756e7420657863656564732062616c616e636548524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a26469706673582212207109da3a88dd1631fb0cc35148dce1b4bfb5d55acd71329eb7ace3ad132f167564736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "107:1352:46:-:0;;;271:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;271:67:46;1948:138:27;;;;;;;;;;;-1:-1:-1;;;271:67:46;1948:138:27;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1948:138:27;;;;;;;2015:13;;1948:138;;;2015:13;;1948:138;2015:13;:::i;:::-;-1:-1:-1;2038:17:27;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2065:9:27;:14;;-1:-1:-1;;;;;311:20:46;;;2065:14:27;311:20:46;-1:-1:-1;;;;;;;;2065:14:27;;;2077:2;2065:14;311:20:46;;;;;;;;;;;-1:-1:-1;107:1352:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;107:1352:46;;;-1:-1:-1;107:1352:46;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "107:1352:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:81:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4187:166:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3194:98;;;:::i;:::-;;;;;;;;;;;;;;;;4820:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4820:317:27;;;;;;;;;;;;;;;;;:::i;1157:300:46:-;;;;;;;;;;;;;;;;-1:-1:-1;1157:300:46;;:::i;:::-;;203:22;;;:::i;:::-;;;;-1:-1:-1;;;;;203:22:46;;;;;;;;;;;;;;3053:81:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5532:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5532:215:27;;;;;;;;:::i;3350:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3350:117:27;-1:-1:-1;;;;;3350:117:27;;:::i;2345:85::-;;;:::i;6234:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6234:266:27;;;;;;;;:::i;444:707:46:-;;;;;;;;;;;;;;;;-1:-1:-1;444:707:46;;:::i;3670:172:27:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3670:172:27;;;;;;;;:::i;3900:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3900:149:27;;;;;;;;;;:::i;2151:81::-;2220:5;2213:12;;;;;;;;-1:-1:-1;;2213:12:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:13;;2213:12;;2220:5;;2213:12;;2220:5;2213:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:81;:::o;4187:166::-;4270:4;4286:39;4295:12;:10;:12::i;:::-;4309:7;4318:6;4286:8;:39::i;:::-;-1:-1:-1;4342:4:27;4187:166;;;;;:::o;3194:98::-;3273:12;;3194:98;:::o;4820:317::-;4926:4;4942:36;4952:6;4960:9;4971:6;4942:9;:36::i;:::-;4988:121;4997:6;5005:12;:10;:12::i;:::-;5019:89;5057:6;5019:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5019:19:27;;;;;;:11;:19;;;;;;5039:12;:10;:12::i;:::-;-1:-1:-1;;;;;5019:33:27;;;;;;;;;;;;-1:-1:-1;5019:33:27;;;:89;:37;:89::i;:::-;4988:8;:121::i;:::-;-1:-1:-1;5126:4:27;4820:317;;;;;:::o;1157:300:46:-;1216:20;1239:13;:11;:13::i;:::-;1216:36;;1263:17;1283:72;1342:12;1283:54;1303:8;;;;;;;;;-1:-1:-1;;;;;1303:8:46;-1:-1:-1;;;;;1303:18:46;;1330:4;1303:33;;;;;;;;;;;;;-1:-1:-1;;;;;1303:33:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1303:33:46;1283:15;;:19;:54::i;:::-;:58;;:72::i;:::-;1263:92;;1365:34;1371:10;1383:15;1365:5;:34::i;:::-;1410:8;;:40;;;-1:-1:-1;;;1410:40:46;;1428:10;1410:40;;;;;;;;;;;;:8;;;;-1:-1:-1;;;;;1410:8:46;;:17;;:40;;;;;;;;;;;;;;;-1:-1:-1;1410:8:46;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1157:300:46:o;203:22::-;;;;;;-1:-1:-1;;;;;203:22:46;;:::o;3053:81:27:-;3118:9;;;;3053:81;:::o;5532:215::-;5620:4;5636:83;5645:12;:10;:12::i;:::-;5659:7;5668:50;5707:10;5668:11;:25;5680:12;:10;:12::i;:::-;-1:-1:-1;;;;;5668:25:27;;;;;;;;;;;;;;;;;-1:-1:-1;5668:25:27;;;:34;;;;;;;;;;;:38;:50::i;3350:117::-;-1:-1:-1;;;;;3442:18:27;3416:7;3442:18;;;;;;;;;;;;3350:117::o;2345:85::-;2416:7;2409:14;;;;;;;;-1:-1:-1;;2409:14:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:13;;2409:14;;2416:7;;2409:14;;2416:7;2409:14;;;;;;;;;;;;;;;;;;;;;;;;6234:266;6327:4;6343:129;6352:12;:10;:12::i;:::-;6366:7;6375:96;6414:15;6375:96;;;;;;;;;;;;;;;;;:11;:25;6387:12;:10;:12::i;:::-;-1:-1:-1;;;;;6375:25:27;;;;;;;;;;;;;;;;;-1:-1:-1;6375:25:27;;;:34;;;;;;;;;;;:96;:38;:96::i;444:707:46:-;503:8;;:66;;;-1:-1:-1;;;503:66:46;;525:10;503:66;;;;545:4;503:66;;;;;;;;;;;;:8;;;;-1:-1:-1;;;;;503:8:46;;:21;;:66;;;;;;;;;;;;;;;-1:-1:-1;503:8:46;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;665:8:46;;:33;;;-1:-1:-1;;;665:33:46;;692:4;665:33;;;;;;-1:-1:-1;;665:8:46;;;-1:-1:-1;;;;;665:8:46;;:18;;:33;;;;;503:66;;665:33;;;;;;;:8;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;665:33:46;;-1:-1:-1;759:20:46;782:13;:11;:13::i;:::-;759:36;-1:-1:-1;837:17:46;;;:39;;-1:-1:-1;858:18:46;;837:39;833:312;;;892:35;898:10;910:16;892:5;:35::i;:::-;833:312;;;1023:15;1041:53;1080:13;1041:34;:16;1062:12;1041:20;:34::i;:53::-;1023:71;;1108:26;1114:10;1126:7;1108:5;:26::i;:::-;833:312;;444:707;;;:::o;3670:172:27:-;3756:4;3772:42;3782:12;:10;:12::i;:::-;3796:9;3807:6;3772:9;:42::i;3900:149::-;-1:-1:-1;;;;;4015:18:27;;;3989:7;4015:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3900:149::o;590:104:2:-;677:10;590:104;:::o;9298:340:27:-;-1:-1:-1;;;;;9399:19:27;;9391:68;;;;-1:-1:-1;;;9391:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9477:21:27;;9469:68;;;;-1:-1:-1;;;9469:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9548:18:27;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9599:32;;;;;;;;;;;;;;;;;9298:340;;;:::o;6974:530::-;-1:-1:-1;;;;;7079:20:27;;7071:70;;;;-1:-1:-1;;;7071:70:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7159:23:27;;7151:71;;;;-1:-1:-1;;;7151:71:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7233:47;7254:6;7262:9;7273:6;7233:20;:47::i;:::-;7311:71;7333:6;7311:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7311:17:27;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7291:17:27;;;:9;:17;;;;;;;;;;;:91;;;;7415:20;;;;;;;:32;;7440:6;7415:24;:32::i;:::-;-1:-1:-1;;;;;7392:20:27;;;:9;:20;;;;;;;;;;;;:55;;;;7462:35;;;;;;;7392:20;;7462:35;;;;;;;;;;;;;6974:530;;;:::o;1746:187:20:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:20;;;1746:187::o;2180:459::-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:20;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2180:459;-1:-1:-1;;;2180:459:20:o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;8465:410:27:-;-1:-1:-1;;;;;8548:21:27;;8540:67;;;;-1:-1:-1;;;8540:67:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8618:49;8639:7;8656:1;8660:6;8618:20;:49::i;:::-;8699:68;8722:6;8699:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8699:18:27;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8678:18:27;;:9;:18;;;;;;;;;;:89;8792:12;;:24;;8809:6;8792:16;:24::i;:::-;8777:12;:39;8831:37;;;;;;;;8857:1;;-1:-1:-1;;;;;8831:37:27;;;;;;;;;;;;8465:410;;:::o;874:176:20:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;7775:370:27;-1:-1:-1;;;;;7858:21:27;;7850:65;;;;;-1:-1:-1;;;7850:65:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:49;7955:1;7959:7;7968:6;7926:20;:49::i;:::-;8001:12;;:24;;8018:6;8001:16;:24::i;:::-;7986:12;:39;-1:-1:-1;;;;;8056:18:27;;:9;:18;;;;;;;;;;;:30;;8079:6;8056:22;:30::i;:::-;-1:-1:-1;;;;;8035:18:27;;:9;:18;;;;;;;;;;;:51;;;;8101:37;;;;;;;8035:18;;:9;;8101:37;;;;;;;;;;7775:370;;:::o;3713:272:20:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:20:o;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/token/HRC20/HRC20.sol\";\n\ncontract SnowmanFactory is HRC20(\"Snowman Factory\",\"SNM\") {\n    using SafeMath for uint256;\n    IHRC20 public snowball;\n\n    // Define the Sushi token contract\n    constructor(IHRC20 _snowball) {\n        snowball = _snowball;\n    }\n\n    //snowball is 'growing', swap_fee will be converted into snowball and xfer into snowman factory\n    function stake(uint256 _amount_snowball) public {\n\n        snowball.transferFrom(msg.sender, address(this), _amount_snowball);\n        // Gets the amount of snowball locked in the contract\n        uint256 totalSnowball = snowball.balanceOf(address(this));\n        // Gets the amount of snowman in existence\n        uint256 totalSnowman = totalSupply();\n        // init rate is 1:1\n        if (totalSnowman == 0 || totalSnowball == 0) {\n            _mint(msg.sender, _amount_snowball);\n        }\n        else {\n            // amount / totalSnowball    *  totalSnowman\n            uint256 to_mint = _amount_snowball.mul(totalSnowman).div(totalSnowball);\n            _mint(msg.sender, to_mint);\n        }\n    }\n\n    function refund(uint256 _amount_snowman) public {\n\n        uint256 totalSnowman = totalSupply();\n\n        uint256 to_return = _amount_snowman.mul(snowball.balanceOf(address(this))).div(totalSnowman);\n        _burn(msg.sender, _amount_snowman);\n\n        snowball.transfer(msg.sender, to_return);\n    }\n}\n",
  "sourcePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowman/SnowmanFactory.sol",
  "ast": {
    "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowman/SnowmanFactory.sol",
    "exportedSymbols": {
      "Context": [
        884
      ],
      "HRC20": [
        5293
      ],
      "IHRC20": [
        5863
      ],
      "SafeMath": [
        4037
      ],
      "SnowmanFactory": [
        8315
      ]
    },
    "id": 8316,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8188,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:46"
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20.sol",
        "file": "../openzeppelin/token/HRC20/HRC20.sol",
        "id": 8189,
        "nodeType": "ImportDirective",
        "scope": 8316,
        "sourceUnit": 5294,
        "src": "58:47:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "536e6f776d616e20466163746f7279",
                "id": 8191,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "140:17:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_187015f4a85451c4adf0b6d2d701600de672e18637a9d14d0d3ca408e84d7bce",
                  "typeString": "literal_string \"Snowman Factory\""
                },
                "value": "Snowman Factory"
              },
              {
                "hexValue": "534e4d",
                "id": 8192,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "158:5:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5f17fb1eefa72d2666826e7791974a50379207f2a966067d24a5bb76cfd3236",
                  "typeString": "literal_string \"SNM\""
                },
                "value": "SNM"
              }
            ],
            "baseName": {
              "id": 8190,
              "name": "HRC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5293,
              "src": "134:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HRC20_$5293",
                "typeString": "contract HRC20"
              }
            },
            "id": 8193,
            "nodeType": "InheritanceSpecifier",
            "src": "134:30:46"
          }
        ],
        "contractDependencies": [
          884,
          5293,
          5863
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8315,
        "linearizedBaseContracts": [
          8315,
          5293,
          5863,
          884
        ],
        "name": "SnowmanFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8196,
            "libraryName": {
              "id": 8194,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4037,
              "src": "177:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4037",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "171:27:46",
            "typeName": {
              "id": 8195,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "190:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "28f2642f",
            "id": 8198,
            "mutability": "mutable",
            "name": "snowball",
            "nodeType": "VariableDeclaration",
            "scope": 8315,
            "src": "203:22:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IHRC20_$5863",
              "typeString": "contract IHRC20"
            },
            "typeName": {
              "id": 8197,
              "name": "IHRC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5863,
              "src": "203:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHRC20_$5863",
                "typeString": "contract IHRC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8207,
              "nodeType": "Block",
              "src": "301:37:46",
              "statements": [
                {
                  "expression": {
                    "id": 8205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8203,
                      "name": "snowball",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8198,
                      "src": "311:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHRC20_$5863",
                        "typeString": "contract IHRC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8204,
                      "name": "_snowball",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8200,
                      "src": "322:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHRC20_$5863",
                        "typeString": "contract IHRC20"
                      }
                    },
                    "src": "311:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHRC20_$5863",
                      "typeString": "contract IHRC20"
                    }
                  },
                  "id": 8206,
                  "nodeType": "ExpressionStatement",
                  "src": "311:20:46"
                }
              ]
            },
            "id": 8208,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8200,
                  "mutability": "mutable",
                  "name": "_snowball",
                  "nodeType": "VariableDeclaration",
                  "scope": 8208,
                  "src": "283:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHRC20_$5863",
                    "typeString": "contract IHRC20"
                  },
                  "typeName": {
                    "id": 8199,
                    "name": "IHRC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5863,
                    "src": "283:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHRC20_$5863",
                      "typeString": "contract IHRC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "282:18:46"
            },
            "returnParameters": {
              "id": 8202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:46"
            },
            "scope": 8315,
            "src": "271:67:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8272,
              "nodeType": "Block",
              "src": "492:659:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "525:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "525:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8220,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "545:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          ],
                          "id": 8219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "537:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "537:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "537:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8222,
                        "name": "_amount_snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8210,
                        "src": "552:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8213,
                        "name": "snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8198,
                        "src": "503:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHRC20_$5863",
                          "typeString": "contract IHRC20"
                        }
                      },
                      "id": 8215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5844,
                      "src": "503:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "503:66:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8224,
                  "nodeType": "ExpressionStatement",
                  "src": "503:66:46"
                },
                {
                  "assignments": [
                    8226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8226,
                      "mutability": "mutable",
                      "name": "totalSnowball",
                      "nodeType": "VariableDeclaration",
                      "scope": 8272,
                      "src": "641:21:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "641:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8234,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8231,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "692:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          ],
                          "id": 8230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "684:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8229,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "684:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "684:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8227,
                        "name": "snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8198,
                        "src": "665:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHRC20_$5863",
                          "typeString": "contract IHRC20"
                        }
                      },
                      "id": 8228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5802,
                      "src": "665:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "665:33:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "641:57:46"
                },
                {
                  "assignments": [
                    8236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8236,
                      "mutability": "mutable",
                      "name": "totalSnowman",
                      "nodeType": "VariableDeclaration",
                      "scope": 8272,
                      "src": "759:20:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "759:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8239,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8237,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4879,
                      "src": "782:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 8238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:13:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "759:36:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8240,
                        "name": "totalSnowman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "837:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "853:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "837:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8243,
                        "name": "totalSnowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "858:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "875:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "858:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "837:39:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8270,
                    "nodeType": "Block",
                    "src": "952:193:46",
                    "statements": [
                      {
                        "assignments": [
                          8255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8255,
                            "mutability": "mutable",
                            "name": "to_mint",
                            "nodeType": "VariableDeclaration",
                            "scope": 8270,
                            "src": "1023:15:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8254,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1023:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8263,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 8261,
                              "name": "totalSnowball",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8226,
                              "src": "1080:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8258,
                                  "name": "totalSnowman",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8236,
                                  "src": "1062:12:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 8256,
                                  "name": "_amount_snowball",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8210,
                                  "src": "1041:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3950,
                                "src": "1041:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1041:34:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3967,
                            "src": "1041:38:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1041:53:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1023:71:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8265,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1114:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1114:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 8267,
                              "name": "to_mint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8255,
                              "src": "1126:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8264,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5169,
                            "src": "1108:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 8268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8269,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:26:46"
                      }
                    ]
                  },
                  "id": 8271,
                  "nodeType": "IfStatement",
                  "src": "833:312:46",
                  "trueBody": {
                    "id": 8253,
                    "nodeType": "Block",
                    "src": "878:60:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8248,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "898:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "898:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 8250,
                              "name": "_amount_snowball",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8210,
                              "src": "910:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8247,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5169,
                            "src": "892:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 8251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "892:35:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8252,
                        "nodeType": "ExpressionStatement",
                        "src": "892:35:46"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 8273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8210,
                  "mutability": "mutable",
                  "name": "_amount_snowball",
                  "nodeType": "VariableDeclaration",
                  "scope": 8273,
                  "src": "459:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:26:46"
            },
            "returnParameters": {
              "id": 8212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:0:46"
            },
            "scope": 8315,
            "src": "444:707:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8313,
              "nodeType": "Block",
              "src": "1205:252:46",
              "statements": [
                {
                  "assignments": [
                    8279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8279,
                      "mutability": "mutable",
                      "name": "totalSnowman",
                      "nodeType": "VariableDeclaration",
                      "scope": 8313,
                      "src": "1216:20:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1216:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8282,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8280,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4879,
                      "src": "1239:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 8281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:13:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1216:36:46"
                },
                {
                  "assignments": [
                    8284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8284,
                      "mutability": "mutable",
                      "name": "to_return",
                      "nodeType": "VariableDeclaration",
                      "scope": 8313,
                      "src": "1263:17:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1263:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8298,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8296,
                        "name": "totalSnowman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8279,
                        "src": "1342:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 8291,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1330:4:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                                      "typeString": "contract SnowmanFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                                      "typeString": "contract SnowmanFactory"
                                    }
                                  ],
                                  "id": 8290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1322:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 8289,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1322:7:46",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 8292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:13:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 8287,
                                "name": "snowball",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8198,
                                "src": "1303:8:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHRC20_$5863",
                                  "typeString": "contract IHRC20"
                                }
                              },
                              "id": 8288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5802,
                              "src": "1303:18:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 8293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1303:33:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8285,
                            "name": "_amount_snowman",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8275,
                            "src": "1283:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3950,
                          "src": "1283:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:54:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3967,
                      "src": "1283:58:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:72:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1263:92:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1371:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1371:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 8302,
                        "name": "_amount_snowman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8275,
                        "src": "1383:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8299,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5225,
                      "src": "1365:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:34:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8304,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:34:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1428:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1428:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 8310,
                        "name": "to_return",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8284,
                        "src": "1440:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8305,
                        "name": "snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8198,
                        "src": "1410:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHRC20_$5863",
                          "typeString": "contract IHRC20"
                        }
                      },
                      "id": 8307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5812,
                      "src": "1410:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:40:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8312,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:40:46"
                }
              ]
            },
            "functionSelector": "278ecde1",
            "id": 8314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8275,
                  "mutability": "mutable",
                  "name": "_amount_snowman",
                  "nodeType": "VariableDeclaration",
                  "scope": 8314,
                  "src": "1173:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1172:25:46"
            },
            "returnParameters": {
              "id": 8277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:46"
            },
            "scope": 8315,
            "src": "1157:300:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8316,
        "src": "107:1352:46"
      }
    ],
    "src": "33:1427:46"
  },
  "legacyAST": {
    "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/snowman/SnowmanFactory.sol",
    "exportedSymbols": {
      "Context": [
        884
      ],
      "HRC20": [
        5293
      ],
      "IHRC20": [
        5863
      ],
      "SafeMath": [
        4037
      ],
      "SnowmanFactory": [
        8315
      ]
    },
    "id": 8316,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8188,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:46"
      },
      {
        "absolutePath": "/home/lycrus/WebstormProjects/WinterSwap/contracts/openzeppelin/token/HRC20/HRC20.sol",
        "file": "../openzeppelin/token/HRC20/HRC20.sol",
        "id": 8189,
        "nodeType": "ImportDirective",
        "scope": 8316,
        "sourceUnit": 5294,
        "src": "58:47:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "536e6f776d616e20466163746f7279",
                "id": 8191,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "140:17:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_187015f4a85451c4adf0b6d2d701600de672e18637a9d14d0d3ca408e84d7bce",
                  "typeString": "literal_string \"Snowman Factory\""
                },
                "value": "Snowman Factory"
              },
              {
                "hexValue": "534e4d",
                "id": 8192,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "158:5:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5f17fb1eefa72d2666826e7791974a50379207f2a966067d24a5bb76cfd3236",
                  "typeString": "literal_string \"SNM\""
                },
                "value": "SNM"
              }
            ],
            "baseName": {
              "id": 8190,
              "name": "HRC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5293,
              "src": "134:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HRC20_$5293",
                "typeString": "contract HRC20"
              }
            },
            "id": 8193,
            "nodeType": "InheritanceSpecifier",
            "src": "134:30:46"
          }
        ],
        "contractDependencies": [
          884,
          5293,
          5863
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8315,
        "linearizedBaseContracts": [
          8315,
          5293,
          5863,
          884
        ],
        "name": "SnowmanFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8196,
            "libraryName": {
              "id": 8194,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4037,
              "src": "177:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4037",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "171:27:46",
            "typeName": {
              "id": 8195,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "190:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "28f2642f",
            "id": 8198,
            "mutability": "mutable",
            "name": "snowball",
            "nodeType": "VariableDeclaration",
            "scope": 8315,
            "src": "203:22:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IHRC20_$5863",
              "typeString": "contract IHRC20"
            },
            "typeName": {
              "id": 8197,
              "name": "IHRC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5863,
              "src": "203:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHRC20_$5863",
                "typeString": "contract IHRC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8207,
              "nodeType": "Block",
              "src": "301:37:46",
              "statements": [
                {
                  "expression": {
                    "id": 8205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8203,
                      "name": "snowball",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8198,
                      "src": "311:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHRC20_$5863",
                        "typeString": "contract IHRC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8204,
                      "name": "_snowball",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8200,
                      "src": "322:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHRC20_$5863",
                        "typeString": "contract IHRC20"
                      }
                    },
                    "src": "311:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHRC20_$5863",
                      "typeString": "contract IHRC20"
                    }
                  },
                  "id": 8206,
                  "nodeType": "ExpressionStatement",
                  "src": "311:20:46"
                }
              ]
            },
            "id": 8208,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8200,
                  "mutability": "mutable",
                  "name": "_snowball",
                  "nodeType": "VariableDeclaration",
                  "scope": 8208,
                  "src": "283:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHRC20_$5863",
                    "typeString": "contract IHRC20"
                  },
                  "typeName": {
                    "id": 8199,
                    "name": "IHRC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5863,
                    "src": "283:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHRC20_$5863",
                      "typeString": "contract IHRC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "282:18:46"
            },
            "returnParameters": {
              "id": 8202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:46"
            },
            "scope": 8315,
            "src": "271:67:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8272,
              "nodeType": "Block",
              "src": "492:659:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "525:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "525:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8220,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "545:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          ],
                          "id": 8219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "537:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "537:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "537:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8222,
                        "name": "_amount_snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8210,
                        "src": "552:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8213,
                        "name": "snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8198,
                        "src": "503:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHRC20_$5863",
                          "typeString": "contract IHRC20"
                        }
                      },
                      "id": 8215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5844,
                      "src": "503:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "503:66:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8224,
                  "nodeType": "ExpressionStatement",
                  "src": "503:66:46"
                },
                {
                  "assignments": [
                    8226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8226,
                      "mutability": "mutable",
                      "name": "totalSnowball",
                      "nodeType": "VariableDeclaration",
                      "scope": 8272,
                      "src": "641:21:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "641:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8234,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8231,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "692:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                              "typeString": "contract SnowmanFactory"
                            }
                          ],
                          "id": 8230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "684:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8229,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "684:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "684:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8227,
                        "name": "snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8198,
                        "src": "665:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHRC20_$5863",
                          "typeString": "contract IHRC20"
                        }
                      },
                      "id": 8228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5802,
                      "src": "665:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "665:33:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "641:57:46"
                },
                {
                  "assignments": [
                    8236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8236,
                      "mutability": "mutable",
                      "name": "totalSnowman",
                      "nodeType": "VariableDeclaration",
                      "scope": 8272,
                      "src": "759:20:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "759:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8239,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8237,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4879,
                      "src": "782:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 8238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:13:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "759:36:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8240,
                        "name": "totalSnowman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "837:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "853:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "837:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8243,
                        "name": "totalSnowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "858:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "875:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "858:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "837:39:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8270,
                    "nodeType": "Block",
                    "src": "952:193:46",
                    "statements": [
                      {
                        "assignments": [
                          8255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8255,
                            "mutability": "mutable",
                            "name": "to_mint",
                            "nodeType": "VariableDeclaration",
                            "scope": 8270,
                            "src": "1023:15:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8254,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1023:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8263,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 8261,
                              "name": "totalSnowball",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8226,
                              "src": "1080:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8258,
                                  "name": "totalSnowman",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8236,
                                  "src": "1062:12:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 8256,
                                  "name": "_amount_snowball",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8210,
                                  "src": "1041:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3950,
                                "src": "1041:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1041:34:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3967,
                            "src": "1041:38:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1041:53:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1023:71:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8265,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1114:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1114:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 8267,
                              "name": "to_mint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8255,
                              "src": "1126:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8264,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5169,
                            "src": "1108:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 8268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8269,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:26:46"
                      }
                    ]
                  },
                  "id": 8271,
                  "nodeType": "IfStatement",
                  "src": "833:312:46",
                  "trueBody": {
                    "id": 8253,
                    "nodeType": "Block",
                    "src": "878:60:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8248,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "898:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "898:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 8250,
                              "name": "_amount_snowball",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8210,
                              "src": "910:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8247,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5169,
                            "src": "892:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 8251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "892:35:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8252,
                        "nodeType": "ExpressionStatement",
                        "src": "892:35:46"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 8273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8210,
                  "mutability": "mutable",
                  "name": "_amount_snowball",
                  "nodeType": "VariableDeclaration",
                  "scope": 8273,
                  "src": "459:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:26:46"
            },
            "returnParameters": {
              "id": 8212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:0:46"
            },
            "scope": 8315,
            "src": "444:707:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8313,
              "nodeType": "Block",
              "src": "1205:252:46",
              "statements": [
                {
                  "assignments": [
                    8279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8279,
                      "mutability": "mutable",
                      "name": "totalSnowman",
                      "nodeType": "VariableDeclaration",
                      "scope": 8313,
                      "src": "1216:20:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1216:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8282,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8280,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4879,
                      "src": "1239:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 8281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:13:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1216:36:46"
                },
                {
                  "assignments": [
                    8284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8284,
                      "mutability": "mutable",
                      "name": "to_return",
                      "nodeType": "VariableDeclaration",
                      "scope": 8313,
                      "src": "1263:17:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1263:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8298,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8296,
                        "name": "totalSnowman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8279,
                        "src": "1342:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 8291,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1330:4:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                                      "typeString": "contract SnowmanFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SnowmanFactory_$8315",
                                      "typeString": "contract SnowmanFactory"
                                    }
                                  ],
                                  "id": 8290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1322:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 8289,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1322:7:46",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 8292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:13:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 8287,
                                "name": "snowball",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8198,
                                "src": "1303:8:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHRC20_$5863",
                                  "typeString": "contract IHRC20"
                                }
                              },
                              "id": 8288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5802,
                              "src": "1303:18:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 8293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1303:33:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8285,
                            "name": "_amount_snowman",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8275,
                            "src": "1283:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3950,
                          "src": "1283:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:54:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3967,
                      "src": "1283:58:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:72:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1263:92:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1371:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1371:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 8302,
                        "name": "_amount_snowman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8275,
                        "src": "1383:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8299,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5225,
                      "src": "1365:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:34:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8304,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:34:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1428:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1428:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 8310,
                        "name": "to_return",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8284,
                        "src": "1440:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8305,
                        "name": "snowball",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8198,
                        "src": "1410:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHRC20_$5863",
                          "typeString": "contract IHRC20"
                        }
                      },
                      "id": 8307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5812,
                      "src": "1410:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:40:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8312,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:40:46"
                }
              ]
            },
            "functionSelector": "278ecde1",
            "id": 8314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8275,
                  "mutability": "mutable",
                  "name": "_amount_snowman",
                  "nodeType": "VariableDeclaration",
                  "scope": 8314,
                  "src": "1173:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1172:25:46"
            },
            "returnParameters": {
              "id": 8277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:46"
            },
            "scope": 8315,
            "src": "1157:300:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8316,
        "src": "107:1352:46"
      }
    ],
    "src": "33:1427:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-14T15:54:35.105Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IHRC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IHRC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IHRC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {HRC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IHRC20-balanceOf} and {IHRC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IHRC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IHRC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IHRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IHRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {HRC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}